package com.rongke.utils;import sun.misc.BASE64Decoder;import sun.misc.BASE64Encoder;import javax.imageio.ImageIO;import java.awt.*;import java.awt.image.BufferedImage;import java.io.*;/** * Created by bin on 2017/11/16. */public class Base64Picture {    public String GetImageStr(String imgFilePath) {// 将图片文件转化为字节数组字符串，并对其进行Base64编码处理        byte[] data = null;        // 读取图片字节数组        try {            InputStream in = new FileInputStream(imgFilePath);            data = new byte[in.available()];            in.read(data);            in.close();        } catch (IOException e) {            e.printStackTrace();        }        // 对字节数组Base64编码        BASE64Encoder encoder = new BASE64Encoder();        return encoder.encode(data);// 返回Base64编码过的字节数组字符串    }    public static boolean GenerateImage(String imgStr, String imgFilePath) {// 对字节数组字符串进行Base64解码并生成图片        if (imgStr == null) // 图像数据为空            return false;        BASE64Decoder decoder = new BASE64Decoder();        try {            // Base64解码            byte[] bytes = decoder.decodeBuffer(imgStr);            for (int i = 0; i < bytes.length; ++i) {                if (bytes[i] < 0) {// 调整异常数据                    bytes[i] += 256;                }            }            // 生成jpeg图片            OutputStream out = new FileOutputStream(imgFilePath);            out.write(bytes);            out.flush();            out.close();            return true;        } catch (Exception e) {            e.printStackTrace();            return false;        }    }    /**     * img转base64     * @param image     * @return     * @throws IOException     */    public static String putImage(Image image) throws IOException {        // Image->bufferreImage        BufferedImage bimg = new BufferedImage(image.getWidth(null),                image.getHeight(null), BufferedImage.TYPE_INT_RGB);        Graphics g = bimg.createGraphics();        g.drawImage(image, 0, 0, null);        g.dispose();        // bufferImage->base64        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();        ImageIO.write(bimg, "jpg", outputStream);        BASE64Encoder encoder = new BASE64Encoder();        String base64Img = encoder.encode(outputStream.toByteArray());        return base64Img;    }}