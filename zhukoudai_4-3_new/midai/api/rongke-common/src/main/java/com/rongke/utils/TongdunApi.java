package com.rongke.utils;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONObject;import com.rongke.utils.HttpClientUtil;import org.apache.commons.io.output.ByteArrayOutputStream;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import java.io.ByteArrayInputStream;import java.io.IOException;import java.util.Map;import java.util.zip.GZIPInputStream;/** * Created by bin on 2017/11/23. */public class TongdunApi {    private static final Log log = LogFactory.getLog(TongdunApi.class);    private static final String PARTNER_CODE = "wmhs_mohe";// 合作方标识    private static final String PARTNER_KEY  = "bd84f369f4894583a95d4a0647b1e744";//合作方密钥    /**     * 同盾创建任务方法     * @param name     * @param idcard     * @param mobile     * @return     */    public static JSONObject createTask(String name, String idcard, String mobile,Long userId){        String url = "https://api.shujumohe.com/octopus/task.unify.create/v3?partner_code="+PARTNER_CODE+"&partner_key="+PARTNER_KEY;        String body = "channel_type=YYS&channel_code=100000&real_name="+name+"&identity_code="+idcard+"&user_mobile="+mobile+"&passback_params="+userId;        String result =  HttpClientUtil.sendPostSSLRequest(url,body,"UTF-8","application/x-www-form-urlencoded");        System.out.print(result);        return JSON.parseObject(result);    }    /**     * 登录验证     * @param taskId     * @param userName     * @param userPass     * @param taskStage     * @param requestType     * @param map     * @return     */    public static JSONObject acquire(String taskId,String userName, String userPass,String taskStage,String requestType,Map<String,String> map){        String url = "https://api.shujumohe.com/octopus/yys.unify.acquire/v3?partner_code="+PARTNER_CODE+"&partner_key="+PARTNER_KEY;     /*   Map<String,String> bodyMap = new HashMap<>();        bodyMap.put("task_id",taskId);        bodyMap.put("user_name",userName);        bodyMap.put("user_pass",userPass);        bodyMap.put("task_stage",taskStage);        bodyMap.put("request_type",requestType);*/        String body = "task_id="+taskId+"&user_name="+userName+"&user_pass="+userPass+"&task_stage="+taskStage+"&request_type="+requestType;        if(map != null){            for (String key : map.keySet()) {                String value = map.get(key);                body += "&"+key+"="+value;            }        }        String result = HttpClientUtil.sendPostSSLRequest(url,body,"UTF-8","application/x-www-form-urlencoded");        System.out.print(result);        return JSON.parseObject(result);    }    public static JSONObject getAll(String taskId){        String url = "https://api.shujumohe.com/octopus/task.unify.query/v3?partner_code="+PARTNER_CODE+"&partner_key="+PARTNER_KEY;        String body = "task_id="+taskId;        String result = HttpClientUtil.sendPostSSLRequest(url,body,"UTF-8","application/x-www-form-urlencoded");        return JSON.parseObject(result);    }    /**     * 获取淘宝数据信息     * @return     */    public static JSONObject getTaobaoData(String taskId){        String url = "https://api.shujumohe.com/octopus/sdk.service.task.query/v3?partner_code="+PARTNER_CODE+"&partner_key="+PARTNER_KEY;        String body = "task_id="+taskId;        String result = HttpClientUtil.sendPostSSLRequest(url,body,"UTF-8","application/x-www-form-urlencoded");        return JSON.parseObject(result);    }    /**     * 获取支付宝数据信息     * @return     */    public static JSONObject getZhifubaoData(String taskId){        String url = "https://api.shujumohe.com/octopus/sdk.service.task.query/v3?partner_code="+PARTNER_CODE+"&partner_key="+PARTNER_KEY;        String body = "task_id="+taskId;        String result = HttpClientUtil.sendPostSSLRequest(url,body,"UTF-8","application/x-www-form-urlencoded");        return JSON.parseObject(result);    }    //贷前审核    public static JSONObject TongDunXDBB (String body,String app_name,String biz_code){        String url = "https://api.tongdun.cn/bodyguard/apply/v4?partner_code="+PARTNER_CODE+"&partner_key="+PARTNER_KEY+"&app_name="+app_name+"&biz_code="+biz_code;        String result = HttpClientUtil.sendPostSSLRequest(url,body,"UTF-8","application/x-www-form-urlencoded");        return JSON.parseObject(result);    }    /**     *     * @param taskId     * @return     */    public static JSONObject activeMsg(String taskId){        String url = "https://api.shujumohe.com/octopus/report.task.query/v2?partner_code="+PARTNER_CODE+"&partner_key="+PARTNER_KEY;        String body = "task_id="+taskId;        String result = HttpClientUtil.sendPostSSLRequest(url,body,"UTF-8","application/x-www-form-urlencoded");        String resultData = gunzip(JSON.parseObject(result).getString("data"));        return JSON.parseObject(resultData);    }    public static String gunzip(String compressedStr){        ByteArrayOutputStream out= new ByteArrayOutputStream();        ByteArrayInputStream in=null;        GZIPInputStream ginzip=null;        byte[] compressed=null;        String decompressed = null;        try {            // 对返回数据BASE64解码            compressed = new sun.misc.BASE64Decoder().decodeBuffer(compressedStr);            in=new ByteArrayInputStream(compressed);            ginzip=new GZIPInputStream(in);            // 解码后对数据gzip解压缩            byte[] buffer = new byte[1024];            int offset = -1;            while ((offset = ginzip.read(buffer)) != -1) {                out.write(buffer, 0, offset);            }            // 最后对数据进行utf-8转码            decompressed=out.toString("utf-8");        } catch (IOException e) {        } finally {        }        return decompressed;    }}