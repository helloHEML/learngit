package com.rongke.utils;import java.util.Random;import java.util.UUID;/** * 随机数 *  * @author cww */public class RandomUtils {	/**	 * 随机指定范围内N个不重复的数 在初始化的无重复待选数组中随机产生一个数放入结果中，	 * 将待选数组被随机到的数，用待选数组(len-1)下标对应的数替换 然后从len-2里随机产生下一个随机数，如此类推	 * 	 * @param max	 *            指定范围最大值	 * @param min	 *            指定范围最小值	 * @param n	 *            随机数个数	 * @return int[] 随机数结果集	 */	public static int[] randomArray(int min, int max, int n) {		int len = max - min + 1;		if (max < min || n > len) {			return null;		}		// 初始化给定范围的待选数组		int[] source = new int[len];		for (int i = min; i < min + len; i++) {			source[i - min] = i;		}		int[] result = new int[n];		Random rd = new Random();		int index = 0;		for (int i = 0; i < result.length; i++) {			// 待选数组0到(len-2)随机一个下标			index = Math.abs(rd.nextInt() % len--);			// 将随机到的数放入结果集			result[i] = source[index];			// 将待选数组中被随机到的数，用待选数组(len-1)下标对应的数替换			source[index] = source[len];		}		return result;	}	/**	 * 随机指定范围内N个不重复的数 在初始化的无重复待选数组中随机产生一个数放入结果中，	 * 将待选数组被随机到的数，用待选数组(len-1)下标对应的数替换 然后从len-2里随机产生下一个随机数，如此类推	 * 	 * @param max	 *            指定范围最大值	 * @param min	 *            指定范围最小值	 * @param n	 *            随机数个数	 * @return int[] 随机数结果集	 */	public static Long randomNumber(int min, int max, int n) {		int len = max - min + 1;		if (max < min || n > len) {			return null;		}		// 初始化给定范围的待选数组		int[] source = new int[len];		for (int i = min; i < min + len; i++) {			source[i - min] = i;		}		String result = "";		Random rd = new Random();		int index = 0;		for (int i = 0; i < n; i++) {			// 待选数组0到(len-2)随机一个下标			index = Math.abs(rd.nextInt() % len--);			// 将随机到的数放入结果集			result += source[index];			// 将待选数组中被随机到的数，用待选数组(len-1)下标对应的数替换			source[index] = source[len];		}		return Long.parseLong(result);	}	/**	 * 随机指定范围内N个不重复的数 在初始化的无重复待选数组中随机产生一个数放入结果中，	 * 将待选数组被随机到的数，用待选数组(len-1)下标对应的数替换 然后从len-2里随机产生下一个随机数，如此类推	 *	 *            指定范围最小值	 * @param n	 *            随机数个数	 * @return int[] 随机数结果集	 */	public static Long randomNumber(int n) {		return randomNumber(0, 9, n);	}		/**	 * 随机生成不带0的	 */	public static Long getCardNumber(int n) {		return randomNumber(1, 9, n);	}	/**	 * 获取count个随机数	 *	 * @param count 随机数个数	 * @return 随机数	 */	public static String randomString(int count) {		StringBuilder sb = new StringBuilder();		String str = "0123456789";		Random r = new Random();		for (int i = 0; i < count; i++) {			int num = r.nextInt(str.length());			sb.append(str.charAt(num));			str = str.replace((str.charAt(num) + ""), "");		}		return sb.toString();	}	/**	 * 随机字符串生成	 * @param length	 * @return	 */	public static String getRandomString(int length) {		String base = "abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";		Random random = new Random();		StringBuffer sb = new StringBuffer();		for (int i = 0; i < length; i++) {			int number = random.nextInt(base.length());			sb.append(base.charAt(number));		}		return sb.toString();	}	public static void main(String[] args) {       String str="6556a2a3"+UUID.randomUUID().toString().replaceAll("-", "").toLowerCase();		System.out.println(str.split("a")[1].substring(0,1));	}	}