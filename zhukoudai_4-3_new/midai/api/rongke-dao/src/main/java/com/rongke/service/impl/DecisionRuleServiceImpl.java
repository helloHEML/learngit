package com.rongke.service.impl;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.plugins.Page;import com.baomidou.mybatisplus.service.impl.ServiceImpl;import com.rongke.mapper.DecisionRuleMapper;import com.rongke.model.DecisionExpression;import com.rongke.model.DecisionRule;import com.rongke.service.DecisionRuleService;import com.rongke.utils.ans.PageUtils;import com.rongke.utils.ans.Query;import org.apache.commons.lang.StringUtils;import org.springframework.stereotype.Service;import java.util.*;/** * @UserStatusServiceImpl * @ServiceImpl * @version : Ver 1.0 */@Servicepublic class DecisionRuleServiceImpl extends ServiceImpl<DecisionRuleMapper, DecisionRule> implements DecisionRuleService {//    @Override//    public List<DecisionRule> getDecisionRules(Long decisionRuleSetId)//    {//        return this.selectList(new EntityWrapper<DecisionRule>().eq("decision_rule_set_id",decisionRuleSetId).eq("is_use", 1).//                orderAsc( Arrays.asList("priority")));//    }    int parseDecisionRule(String decisionRules, Map<String, Object> out)    {        String[] items;        String combineLabel = "";        List<DecisionExpression> decisionExpressionList = new ArrayList<>();//        这里的if是判断是否为多条或者一条规则，如果为多条"&"中一个为false则为false，"|"中一个为true则为true        if (decisionRules.contains("&")) {            //多条,一条不成立，就返回0            items = decisionRules.split("&");            combineLabel = "&";        }        else if ( decisionRules.contains("|")) {            //多条,所有决策都不成立，就返回0            items = decisionRules.split("\\|");            combineLabel = "|";        }        else{            items = new String[1];            items[0] = decisionRules;        }        for (String decisionRuel: items){            String[] decitionItem  = decisionRuel.split("\\`");            if (decitionItem.length != 4) {                    return -1;            }            DecisionExpression decisionExpression = new DecisionExpression();            String type = StringUtils.strip(decitionItem[0]);            String field = StringUtils.strip(decitionItem[1]);            String condition = StringUtils.strip(decitionItem[2]);            String conditionValue = StringUtils.strip(decitionItem[3]);//如果是区间值，则用逗号分隔:1,2            decisionExpression.setType(type);            decisionExpression.setField(field);            decisionExpression.setCondition(condition);            decisionExpression.setValue(conditionValue);            decisionExpressionList.add(decisionExpression);        }        out.put("combineLabel", combineLabel);//一条语句则为空        out.put("decisionExpressions", decisionExpressionList);        return 1;    }    /** 分页显示 */    @Override    public PageUtils getPages(Map<String, Object> params) {        Page<DecisionRule> page = this.selectPage(new Query<DecisionRule>(params).getPage(), new EntityWrapper<DecisionRule>()                .orderDesc(Arrays.asList("priority"))        );        return new PageUtils(page);    }    @Override    public List<DecisionRule> getDecisionRules(Long decisionRuleSetId)    {        List<DecisionRule> decisionRules =  this.selectList(new EntityWrapper<DecisionRule>().eq("decision_rule_set_id",decisionRuleSetId).eq("is_use", 1).                orderAsc( Arrays.asList("priority")));        for (DecisionRule decisionRule : decisionRules){            Map<String, Object> decisionExpressions = new HashMap<>();            if(-1 == parseDecisionRule(decisionRule.getDecisionRule(), decisionExpressions)){                return null;            }            decisionRule.setCombineLabel(String.valueOf(decisionExpressions.get("combineLabel")));            decisionRule.setDecisionExpressions((List<DecisionExpression>)decisionExpressions.get("decisionExpressions"));        }        return decisionRules;    }    /** 通过规则集的id来查看规则 */    @Override    public List<DecisionRule> getDecisionRulesBySetId(Long decisionRuleSetId) {        List<DecisionRule> decisionRules =  this.selectList(new EntityWrapper<DecisionRule>().eq("decision_rule_set_id",decisionRuleSetId).orderAsc( Arrays.asList("priority")));        return decisionRules;    }}