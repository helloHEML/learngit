<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.rongke.mapper.RepayRecordMapper">    <resultMap type="com.rongke.model.RepayRecord" id="rmRepayRecord">        <id property="id" column="id" />        <result property="userId" column="userId"/>        <result property="orderId" column="orderId"/>        <result property="money" column="money"/>        <result property="type" column="type"/>        <result property="gmtDatetime" column="gmtDatetime"/>        <result property="uptDatetime" column="uptDatetime"/>        <result property="days" column="days"/>        <result property="overtimeMoney" column="overtimeMoney"/>        <association property="user" javaType="com.rongke.model.User">            <result property="realName" column="realName"/>            <result property="phone" column="user_phone"/>        </association>    </resultMap>    <resultMap type="com.rongke.model.RepayRecord" id="mRepayRecord">        <id property="id" column="repayRecord_id" />        <result property="userId" column="repayRecord_userId"/>        <result property="orderId" column="repayRecord_orderId"/>        <result property="money" column="repayRecord_money"/>        <result property="type" column="repayRecord_type"/>        <result property="payType" column="repayRecord_payType"/>        <result property="days" column="repayRecord_days"/>        <result property="overtimeMoney" column="repayRecord_overtimeMoney"/>        <result property="gmtDatetime" column="repayRecord_gmtDatetime"/>        <result property="uptDatetime" column="repayRecord_uptDatetime"/>        <association property="user" javaType="com.rongke.model.User">            <result property="realName" column="user_realName"/>            <result property="phone" column="user_phone"/>        </association>    </resultMap>    <sql id="mRepayRecordPkSql">        repay_record.id AS repayRecord_id,        repay_record.user_id AS repayRecord_userId,        repay_record.order_id AS repayRecord_orderId,        repay_record.money AS repayRecord_money,        repay_record.days AS repayRecord_days,        repay_record.type AS repayRecord_type,        repay_record.pay_type AS repayRecord_payType,        repay_record.overtime_money AS repayRecord_overtimeMoney,        repay_record.gmt_datetime AS repayRecord_gmtDatetime,        repay_record.upt_datetime AS repayRecord_uptDatetime    </sql>    <sql id="mRepayRecordSql">        id AS id,        user_id AS userId,        order_id AS orderId,        money AS money,        overtime_money AS overtimeMoney,        days AS days,        type AS type,        gmt_datetime AS gmtDatetime,        upt_datetime AS uptDatetime    </sql>    <select id="selectByCondition" parameterType="RepayRecord" resultMap="rmRepayRecord">        select        <include refid="mRepayRecordSql"></include>        from repay_record        <where>            <if test="id!= null">                AND id=#{id}            </if>            <if test="userId!= null">                AND user_id=#{userId}            </if>            <if test="orderId!= null">                AND order_id=#{orderId}            </if>            <if test="money!= null">                AND money=#{money}            </if>            <if test="gmtDatetime!= null">                AND gmt_datetime=#{gmtDatetime}            </if>            <if test="uptDatetime!= null">                AND upt_datetime=#{uptDatetime}            </if>        </where>    </select>    <select id="findListByOrderId" parameterType="java.util.Map" resultMap="rmRepayRecord">        SELECT        repay_record.user_id userId, repay_record.`money`,repay_record.`upt_datetime` uptDatetime,repay_record.`type`,repay_record.days,repay_record.overtime_money overtimeMoney,        `user`.real_name realName         FROM `repay_record`,`user`  WHERE repay_record.`user_id`=`user`.`id`         AND order_id=#{orderId}         LIMIT ${pageNo},${pageSize}    </select>    <select id="findListByOrderIdTotal" parameterType="java.util.Map" resultType="string">        SELECT        count(1)        FROM `repay_record`,`user`  WHERE repay_record.`user_id`=`user`.`id`        AND order_id=#{orderId}    </select>    <select id="selectRepayRecordList" parameterType="java.lang.String" resultMap="mRepayRecord">        SELECT        <include refid="mRepayRecordPkSql"></include>        ,        user.real_name AS user_realName,        user.phone AS user_phone        FROM        repay_record,user        WHERE        repay_record.`user_id`=`user`.`id`        <if test="time1!= null and time1!=''">            AND datediff(repay_record.gmt_datetime,#{time1}) &gt;=0        </if>        <if test="time2!= null and time2!=''">            AND datediff(repay_record.gmt_datetime,#{time2}) &lt;=0        </if>        ORDER by repay_record.gmt_datetime DESC        <if test="_parameter.containsKey('startIndex')">            limit ${startIndex},${size}        </if>    </select>    <select id="selectRepayRecordListSize" parameterType="java.lang.String" resultType="java.lang.Integer">        SELECT        COUNT(1)        FROM        repay_record,user        WHERE        repay_record.`user_id`=`user`.`id`        <if test="time1!= null and time1!=''">            AND datediff(repay_record.gmt_datetime,#{time1}) &gt;=-1        </if>        <if test="time2!= null and time2!=''">            AND datediff(repay_record.gmt_datetime,#{time2}) &lt;=-1        </if>    </select>    <select id="selectRepayRecordLimitOne" parameterType="java.lang.String" resultType="com.rongke.model.RepayRecord">        SELECT money , gmt_datetime as gmtDatetime FROM repay_record  where order_id=#{orderId} order by gmt_datetime DESC limit 1    </select>    <select id="repayPage" resultType="java.util.Map">        SELECT rr.id,u.real_name as 'realName',u.phone,rr.money,e.id as 'eId',e.rent_money as 'evaMoney',rr.days,rr.type,rr.pay_type,rr.gmt_datetime as 'gmtDatetime',        (case when o.`status`='已完结' then o.`status` when o.`status`!='待出款' and DATEDIFF(o.upt_datetime,now())>0 then '已付租'        when o.`status`!='待出款' and DATEDIFF(o.upt_datetime,now())=-1 then '待付租' when o.`status`!='待出款' and DATEDIFF(o.upt_datetime,now())&lt;-1 then '已欠租' end) as oStatus FROM repay_record rr LEFT JOIN user u on rr.user_id=u.id LEFT JOIN orders o on rr.order_id  = o.id LEFT JOIN evaluation e on o.evaluation_id = e.id        <where>            ${ew.sqlSegment}        </where>        ORDER BY rr.gmt_datetime DESC    </select></mapper>