package com.rongke.service.impl;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONObject;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.service.impl.ServiceImpl;import com.rongke.mapper.TianbeiSmsMapper;import com.rongke.model.*;import com.rongke.service.*;import com.rongke.utils.TianBeiUtils;import com.rongke.utils.ans.R;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.Date;/** * 天贝短信记录 */@Servicepublic class TianbeiSmsImpl extends ServiceImpl<TianbeiSmsMapper, TianbeiSms> implements TianbeiSmsService {    @Autowired    private UserService userService;    @Autowired    private UserIdentityService userIdentityService;    public R smsInfo(Long userId) {        User user = userService.selectById(userId);        if(user==null){            return R.error("用户不存在");        }        UserIdentity userIdentity = userIdentityService.selectOne(new EntityWrapper<UserIdentity>().eq("user_id", userId));        if(userIdentity==null||userIdentity.getIdentityNum()==null){            return R.error("用户身份信息不存在");        }        TianbeiSms sms = this.selectOne(new EntityWrapper<TianbeiSms>().eq("user_id", user.getId()));        if(sms==null){            JSONObject jsonObject = TianBeiUtils.smsApi(user.getPhone(), userIdentity.getUserName(), userIdentity.getIdentityNum());            if(!"0".equals(jsonObject.getString("code"))){                return R.error(jsonObject.getString("msg"));            }            JSONObject json = jsonObject.getJSONArray("mb_infos").getJSONObject(0).getJSONObject("credit_info");            sms = new TianbeiSms();            sms.setUserId(user.getId());            sms.setReportInfo(jsonObject.getString("report_info"));            sms.setBasicInfo(jsonObject.getString("basic_info"));            sms.setEveSums(json.getString("eveSums"));            sms.setPlatformInfos(json.getString("platform_Infos"));            sms.setRefInfos(json.getString("refInfos"));            sms.setSections(json.getString("sections"));            sms.setScoreI(jsonObject.getString("score_l"));            sms.setScoreS(jsonObject.getString("score_s"));            sms.setCreateTime(new Date());            sms.setUpdateTime(new Date());            sms.setStatus(1);            this.insert(sms);        }        return R.ok().put("data",sms)                .put("eveSums", JSON.parseArray(sms.getEveSums()))                .put("platformInfos", JSON.parseArray(sms.getPlatformInfos()))                .put("sections", JSON.parseArray(sms.getSections()))                .put("refInfos", JSON.parseArray(sms.getRefInfos()));    }    public R smsUpdate(Long userId){        User user = userService.selectById(userId);        if(user==null){            return R.error("用户不存在");        }        UserIdentity userIdentity = userIdentityService.selectOne(new EntityWrapper<UserIdentity>().eq("user_id", userId));        if(userIdentity==null||userIdentity.getIdentityNum()==null){            return R.error("用户身份信息不存在");        }        TianbeiSms sms = this.selectOne(new EntityWrapper<TianbeiSms>().eq("user_id", user.getId()));        JSONObject jsonObject = TianBeiUtils.smsApi(user.getPhone(), userIdentity.getUserName(), userIdentity.getIdentityNum());        if(!"0".equals(jsonObject.getString("code"))){            return R.error(jsonObject.getString("msg"));        }        JSONObject json = jsonObject.getJSONArray("mb_infos").getJSONObject(0).getJSONObject("credit_info");        if(sms==null){            sms = new TianbeiSms();            sms.setUserId(user.getId());            sms.setCreateTime(new Date());            sms.setUpdateTime(new Date());            sms.setStatus(1);        }        sms.setReportInfo(jsonObject.getString("report_info"));        sms.setBasicInfo(jsonObject.getString("basic_info"));        sms.setEveSums(json.getString("eveSums"));        sms.setPlatformInfos(json.getString("platform_Infos"));        sms.setRefInfos(json.getString("refInfos"));        sms.setSections(json.getString("sections"));        sms.setScoreI(jsonObject.getString("score_l"));        sms.setScoreS(jsonObject.getString("score_s"));        this.insertOrUpdate(sms);        return R.ok().put("data",sms)                .put("eveSums", JSON.parseArray(sms.getEveSums()))                .put("platformInfos", JSON.parseArray(sms.getPlatformInfos()))                .put("sections", JSON.parseArray(sms.getSections()))                .put("refInfos", JSON.parseArray(sms.getRefInfos()));    }}