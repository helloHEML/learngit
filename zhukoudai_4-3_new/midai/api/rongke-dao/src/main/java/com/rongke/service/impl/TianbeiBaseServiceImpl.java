package com.rongke.service.impl;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONObject;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.service.impl.ServiceImpl;import com.rongke.enums.TianBeiEnums;import com.rongke.mapper.TianbeiBaseMapper;import com.rongke.model.TianbeiBase;import com.rongke.model.User;import com.rongke.model.UserIdentity;import com.rongke.service.TianbeiBaseService;import com.rongke.service.UserIdentityService;import com.rongke.service.UserService;import com.rongke.utils.TianBeiUtils;import com.rongke.utils.ans.R;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.Date;/** * 天贝存储 */@Servicepublic class TianbeiBaseServiceImpl extends ServiceImpl<TianbeiBaseMapper, TianbeiBase> implements TianbeiBaseService {    @Autowired    private UserService userService;//用户信息    @Autowired    private UserIdentityService userIdentityService;//用户身份信息    /**     * 反欺诈     */    public R getAvoidFraud(Long userId){        TianbeiBase tianBei = getTianBei(userId, TianBeiEnums.LOGIN_SMS.getType());        if(tianBei==null){            return upAvoidFraud(userId);        }else{            return R.ok().put("data",JSON.parseObject(tianBei.getDataOne()));        }    }    /**     * 反欺诈更新     */    public R upAvoidFraud(Long userId){        User user = userService.selectById(userId);        if(user==null){            return R.error("用户不存在");        }        UserIdentity userIdentity = userIdentityService.selectOne(new EntityWrapper<UserIdentity>().eq("user_id", userId));        if(userIdentity==null||userIdentity.getIdentityNum()==null){            return R.error("该用户身份未实名");        }        JSONObject json = TianBeiUtils.fqzApi(user.getPhone(), userIdentity.getUserName(), userIdentity.getIdentityNum());        if(json.getIntValue("code")==0){            JSONObject data = json.getJSONObject("data");            TianbeiBase tianbeiBase = new TianbeiBase();            tianbeiBase.setCreateTime(new Date());            tianbeiBase.setDataOne(data.toJSONString());            tianbeiBase.setType(TianBeiEnums.LOGIN_SMS.getType());            tianbeiBase.setUserId(userId);            tianbeiBase.setUpdateTime(new Date());            tianbeiBase.setStatus(1);            this.insertOrUpdate(tianbeiBase);            return R.ok().put("data",JSON.parseObject(tianbeiBase.getDataOne()));        }else{            return R.error(json.getString("msg"));        }    }    /**     * 获取     */    public TianbeiBase getTianBei(Long userId, Integer type) {        TianbeiBase tianbeiBase = this.selectOne(new EntityWrapper<TianbeiBase>()                .eq("user_id", userId)                .eq("type", type)        );        return tianbeiBase;    }    /**     * 添加     */    public TianbeiBase insertOrUpdateTianBei(TianbeiBase tianbeiBase) {        this.insertOrUpdate(tianbeiBase);        return tianbeiBase;    }}