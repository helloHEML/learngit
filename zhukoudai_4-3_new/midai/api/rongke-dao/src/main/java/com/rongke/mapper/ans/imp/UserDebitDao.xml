<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.rongke.mapper.ans.UserDebitDao">    <!-- 可根据自己的需求，是否要使用 -->    <resultMap type="com.rongke.model.ans.UserDebitEntity" id="userDebitMap">        <result property="id" column="id"/>        <result property="wechatuserId" column="WeChatUser_ID"/>        <result property="startTime" column="start_time"/>        <result property="endTime" column="end_time"/>        <result property="purpose" column="purpose"/>        <result property="type" column="type"/>        <result property="typeremark" column="typeRemark"/>        <result property="interest" column="interest"/>        <result property="targetid" column="targetId"/>        <result property="targetname" column="targetName"/>        <result property="debitstatus" column="debitStatus"/>        <result property="createTime" column="create_time"/>        <result property="updateTime" column="update_time"/>        <result property="memo" column="memo"/>        <result property="money" column="money"/>        <result property="surplusMoney" column="surplus_money"/>        <result property="paydebit" column="payDebit"/>    </resultMap>    <!--获得用户 累计未还钱数以及 三十天内-->    <select id="daydebitZSS" parameterType="map" resultType="string">        select SUM(surplus_money)as money from user_Debit  where type=#{type} and WeChatUser_ID = #{accountID} and debitStatus = 2 or (type=#{type} and targetId = #{accountID})        union all        select SUM(surplus_money)as money from user_Debit where        <![CDATA[DATEDIFF(end_time,start_time)<=7]]>  and type=#{type} and WeChatUser_ID = #{accountID} and debitStatus = 2 or (type=#{type} and targetId = #{accountID})        union all        select SUM(surplus_money)as money from user_Debit where        <![CDATA[DATEDIFF(end_time,start_time)<=30]]>  and type=#{type} and WeChatUser_ID = #{accountID} and debitStatus = 2 or (type=#{type} and targetId = #{accountID})    </select>    <!-- 获得用户借入/出 总额  应还总额， 借入/出 次数 -->    <select id="daydebitZHC" parameterType="map" resultType="string">        select SUM(money)as money from user_Debit  where type=#{type} and WeChatUser_ID = #{accountID} and debitStatus IN (2,4) or (type=#{type} and targetId = #{accountID})        union all        select SUM(surplus_money)as money from user_Debit where         type=#{type} and WeChatUser_ID = #{accountID} and debitStatus IN (2,4) or (type=#{type} and targetId = #{accountID})        union all        select COUNT(id)as money from user_Debit where        type=#{type} and WeChatUser_ID = #{accountID} and debitStatus IN (2,4) or (type=#{type} and targetId = #{accountID})    </select>    <select id="tjDebit"  resultType="string">        select        (select count(id) from  user_Debit where  <![CDATA[DATE_SUB(CURDATE(), INTERVAL 7 DAY) <=date(create_time) AND debitStatus IN (2,4)]]>) as 't1',        (select count(id) from  user_Debit where        <![CDATA[DATE_SUB(CURDATE(), INTERVAL 7 DAY) <=date(create_time) and (DATEDIFF(NOW(),end_time)>0 and surplus_time is null)]]>) as 't2',        (select count(id) from  user_Debit where <![CDATA[DATE_SUB(CURDATE(), INTERVAL 30 DAY) <=date(create_time) AND debitStatus IN (2,4)]]>) as 't3',        (select count(id) from  user_Debit where        <![CDATA[DATE_SUB(CURDATE(), INTERVAL 30 DAY) <=date(create_time) and (DATEDIFF(NOW(),end_time)>0 and surplus_time is null) AND debitStatus IN (2,4)]]>) as 't4' ,        (select count(id) from  user_Debit where  debitStatus IN (2,4)) as 't5',        (select count(id) from  user_Debit where  <![CDATA[DATEDIFF(NOW(),end_time)>0 and surplus_time is null AND debitStatus IN (2,4)]]>) as 't6'    </select></mapper>