<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.rongke.mapper.EvaluationMapper">    <resultMap type="com.rongke.model.Evaluation" id="rmEvaluation">        <id property="id" column="id" />        <result property="userId" column="userId"/>        <result property="name" column="name"/>        <result property="costMoney" column="costMoney"/>        <result property="evaluationPrice" column="evaluationPrice"/>        <result property="rentMoney" column="rentMoney"/>        <result property="status" column="status"/>    </resultMap>    <resultMap type="com.rongke.model.Evaluation" id="mEvaluation">        <id property="id" column="evaluation_id" />        <result property="userId" column="evaluation_userId"/>        <result property="adminId" column="evaluation_adminId"/>        <result property="paramSettingId" column="evaluation_paramSettingId"/>        <result property="userCouponId" column="evaluation_userCouponId"/>        <result property="name" column="evaluation_name"/>        <result property="batchNo" column="evaluation_batchNo"/>        <result property="costMoney" column="evaluation_costMoney"/>        <result property="payMoney" column="evaluation_payMoney"/>        <result property="finalMoney" column="evaluation_finalMoney"/>        <result property="evaluationPrice" column="evaluation_evaluationPrice"/>        <result property="rentMoney" column="evaluation_rentMoney"/>        <result property="status" column="evaluation_status"/>        <result property="gmtDatetime" column="evaluation_gmtDatetime"/>        <result property="uptDatetime" column="evaluation_uptDatetime"/>        <association property="paramSetting" javaType="com.rongke.model.ParamSetting">            <result property="assessMoney" column="paramSetting_assessMoney"/>            <result property="rentDayMoney" column="paramSetting_rentDayMoney"/>            <result property="cashPledge" column="paramSetting_cashPledge"/>        </association>        <association property="userCoupon" javaType="com.rongke.model.UserCoupon">            <result property="totalMoney" column="userCoupon_totalMoney"/>        </association>        <association property="auditor" javaType="com.rongke.model.Admin" >            <result property="loginName" column="admin_loginName"/>            <result property="name" column="admin_name"/>        </association>    </resultMap>    <!--       /* evaluation.protocol_id !=0*/-->    <resultMap id="mEvaluationImpl" type="com.rongke.model.Evaluation" extends="mEvaluation">        <association property="user" javaType="com.rongke.model.User">            <result property="realName" column="user_realName"/>            <result property="phone" column="user_phone"/>        </association>    </resultMap>    <sql id="mEvaluationPkSql">        evaluation.id AS evaluation_id,        evaluation.user_id AS evaluation_userId,        evaluation.admin_id AS evaluation_adminId,        evaluation.name AS evaluation_name,        evaluation.user_coupon_id AS evaluation_userCouponId,        evaluation.pay_money AS evaluation_payMoney,        evaluation.final_money AS evaluation_finalMoney,        evaluation.evaluation_price AS evaluation_evaluationPrice,        evaluation.rent_money AS evaluation_rentMoney,        evaluation.status AS evaluation_status,        evaluation.gmt_datetime AS evaluation_gmtDatetime,        evaluation.upt_datetime AS evaluation_uptDatetime    </sql>    <sql id="mEvaluationSql">        id AS id,        user_id AS userId,        name AS name,        costMoney AS costMoney,        evaluation_price AS evaluationPrice,        status AS status    </sql>    <select id="selectByPage" parameterType="java.util.Map" resultMap="mEvaluationImpl">        SELECT        <include refid="mEvaluationPkSql"></include>,        `user`.phone AS user_phone,        user.real_name AS user_realName,        param_setting.assess_money AS paramSetting_assessMoney,        param_setting.cash_pledge AS paramSetting_cashPledge,        param_setting.rent_day_money AS paramSetting_rentDayMoney,        user_coupon.total_money AS userCoupon_totalMoney        from evaluation LEFT JOIN user_coupon ON evaluation.user_coupon_id=user_coupon.id,        `user`,param_setting        WHERE        evaluation.user_id=user.id        AND evaluation.param_setting_id=param_setting.id        AND evaluation.pay_money !=0.00        <if test="phone != null and phone != ''">            AND  `user`.`phone` LIKE CONCAT(CONCAT('%',#{phone}),'%')        </if>        <if test="goodsName != null and goodsName != ''">            AND  evaluation.name LIKE CONCAT(CONCAT('%',#{goodsName}),'%')        </if>        <if test="gmtDatetime1!= null and gmtDatetime1!=''">            AND datediff(evaluation.upt_datetime,#{gmtDatetime1}) &gt;=0        </if>        <if test="gmtDatetime2!= null and gmtDatetime2!=''">            AND datediff(evaluation.upt_datetime,#{gmtDatetime2}) &lt;=0        </if>        <if test="status!=null and status!= ''">            AND evaluation.status=#{status}        </if>        <if test="statusIn!=null">            AND evaluation.status IN            <foreach collection="statusIn" item="item" open="(" separator="," close=")">                #{item}            </foreach>        </if>        <if test="adminId!=null">            AND evaluation.admin_id =#{adminId}        </if>        <if test="auditorId!=null">            AND evaluation.auditor_id =#{auditorId}        </if>        ORDER BY CONVERT(evaluation.status USING gbk)  ASC,evaluation.gmt_datetime DESC        <if test="_parameter.containsKey('pageNo')">            LIMIT ${pageNo},${pageSize}        </if>    </select>    <select id="selectByPageCount" parameterType="java.util.Map" resultType="java.lang.Integer">        SELECT        COUNT(1)        from evaluation,`user`,param_setting        WHERE        evaluation.user_id=user.id        AND        evaluation.param_setting_id=param_setting.id        AND evaluation.pay_money !=0.00        <if test="phone != null and phone != ''">            AND  `user`.`phone` LIKE CONCAT(CONCAT('%',#{phone}),'%')        </if>        <if test="goodsName != null and goodsName != ''">            AND  evaluation.name LIKE CONCAT(CONCAT('%',#{goodsName}),'%')        </if>        <if test="gmtDatetime1!= null and gmtDatetime1!=''">            AND datediff(evaluation.upt_datetime,#{gmtDatetime1}) &gt;=0        </if>        <if test="gmtDatetime2!= null and gmtDatetime2!=''">            AND datediff(evaluation.upt_datetime,#{gmtDatetime2}) &lt;=0        </if>        <if test="status != '' and status!=null">            AND evaluation.status =#{status}        </if>        <if test="statusIn!=null">            AND evaluation.status IN            <foreach collection="statusIn" item="item" open="(" separator="," close=")">                #{item}            </foreach>        </if>        <if test="adminId!=null">            AND evaluation.admin_id =#{adminId}        </if>        <if test="auditorId!=null">            AND evaluation.auditor_id =#{auditorId}        </if>    </select>    <select id="selectEvaAdminList" parameterType="java.lang.String" resultMap="mEvaluation">        SELECT        evaluation.id AS evaluation_id,        evaluation.admin_id AS evaluation_adminId,        evaluation.batch_no AS evaluation_batchNo,        evaluation.status AS evaluation_status,        admin.login_name AS admin_loginName,        admin.name AS admin_name        FROM        evaluation,admin        WHERE        evaluation.admin_id=admin.id        <if test="time1!= null and time1!=''">            AND datediff(evaluation.gmt_datetime,#{time1}) &gt;=0        </if>        <if test="time2!= null and time2!=''">            AND datediff(evaluation.gmt_datetime,#{time2}) &lt;=0        </if>    </select>    <select id="distribution" resultType="com.rongke.model.Evaluation">        SELECT e.id as id,c.principal as roleId FROM `evaluation` e LEFT JOIN user u on e.user_id = u.id LEFT JOIN channel c on u.source = c.id        <where>            ${ew.sqlSegment}        </where>    </select>    <!--       ,yunhetong    AND evaluation.contract_id=yunhetong.contract_id             AND yunhetong.status='签署完成'             <if test="time1!= null and time1!=''">                 AND datediff(yunhetong.upt_datetime,#{time1}) &gt;=0             </if>             <if test="time2!= null and time2!=''">                 AND datediff(yunhetong.upt_datetime,#{time2}) &lt;=0             </if>--></mapper>