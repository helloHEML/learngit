<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.rongke.mapper.ChannelSumMapper">    <resultMap type="com.rongke.model.ChannelSum" id="channelSum">        <id property="id" column="id" />        <result property="cid" column="cid"/>        <result property="name" column="name"/>        <result property="zc" column="zc"/>        <result property="rzrs" column="rzrs"/>        <result property="rzsb" column="rzsb"/>        <result property="rzwwc" column="rzwwc"/>        <result property="rzcg" column="rzcg"/>        <result property="wrz" column="wrz"/>        <result property="sqrs" column="sqrs"/>        <result property="sqrss" column="sqrss"/>        <result property="tgrs" column="tgrs"/>        <result property="hzrs" column="hzrs"/>        <result property="yqrs" column="yqrs"/>        <result property="fkrs" column="fkrs"/>        <result property="fkrss" column="fkrss"/>    </resultMap>    <!-- 给channelSum表中添加名称，器名称为渠道商的名称 -->    <insert id="channelSumInsert" parameterType="channelSum" >        insert into channel_sum(cid,name) values(#{cid},#{name})    </insert>    <!-- 把统计注册，认证，申请的人数统计出来放到表中 -->    <!--<update id="updateChennlSum">-->    <!--UPDATE channel_sum shs,-->    <!--(SELECT b.cid,b.zc,b.rzrs,b.rzsb,b.rzcg,(b.rzrs-(b.rzsb+b.rzcg)) as rzwwc  ,b.wrz,b.sqrs,b.sqrss,b.tgrs,b.hzrs,b.yqrs,ch.name FROM-->    <!--( select-->    <!--u.source as 'cid',-->    <!--u.`gmt_datetime` as 'gmt_datetime',-->    <!--count(u.id) as'zc',-->    <!--count(case when a.bank_card_auth!=0 or phone_address_book_auth!=0 or user_base_msg_auth!=0 or phone_record_auth!=0 or identity_auth!=0 or taobao_auth!=0 then u.id else null end) as 'rzrs',-->    <!--count(case when a.bank_card_auth=2 or a.phone_address_book_auth=2 or a.user_base_msg_auth=2 or a.phone_record_auth=2 or a.identity_auth=2 or a.taobao_auth=2 then u.id else null end ) as 'rzsb',-->    <!--count(case when a.bank_card_auth=1 and a.phone_address_book_auth=1 and a.user_base_msg_auth=1 and a.phone_record_auth=1 and a.identity_auth=1 and a.taobao_auth=1 then u.id else null end ) as 'rzcg',-->    <!--count(case when a.bank_card_auth=0 and a.phone_address_book_auth=0 and a.user_base_msg_auth=0 and a.phone_record_auth=0 and a.identity_auth=0 and a.taobao_auth=0 then u.id else null end ) as 'wrz',-->    <!--count(DISTINCT case when e.id is not null  then u.id else null end) as 'sqrs',-->    <!--count(case when e.id is not null  then u.id else null end) as 'sqrss',-->    <!--count(case when  e.`status`='已打款' or e.`status`='待打款' or e.`status`='已完结'  then u.id else null end) as 'tgrs',-->    <!--count(case when  DATEDIFF(NOW(),o.upt_datetime)>30 then u.id else null end) as 'hzrs',-->    <!--count(case when  DATEDIFF(NOW(),o.upt_datetime)>1 then u.id else null end) as 'yqrs'-->    <!--from `user` u JOIN authentication a on u.id=a.user_id-->    <!--LEFT JOIN evaluation e on u.id = e.user_id LEFT JOIN orders o on o.evaluation_id=e.id-->    <!--where u.source is NOT null-->    <!--GROUP BY u.source-->    <!--) b join channel ch on b.cid=ch.id )bb SET shs.cid=bb.cid,shs.zc=bb.zc,shs.rzrs=bb.rzrs,shs.rzsb=bb.rzsb,shs.rzcg=bb.rzcg,shs.rzwwc=bb.rzwwc,shs.wrz=bb.wrz,shs.sqrs=bb.sqrs,shs.sqrss=bb.sqrss-->    <!--,shs.tgrs=bb.tgrs,shs.hzrs=bb.hzrs,shs.yqrs=bb.yqrs WHERE shs.name=bb.name-->    <!--</update>-->    <!-- 把统计注册，认证人数统计出来放到表中 -->    <update id="updateChennlSum">     UPDATE channel_sum shs,	(SELECT b.cid,b.zc,b.rzrs,b.rzsb,b.rzcg,(b.rzrs-(b.rzsb+b.rzcg)) as rzwwc,b.wrz FROM	( SELECT u.source as 'cid',		COUNT(u.id) as 'zc',		count(case when a.bank_card_auth!=0 or phone_address_book_auth!=0 or user_base_msg_auth!=0 or phone_record_auth!=0 or identity_auth!=0 or taobao_auth!=0 then u.id else null end) as 'rzrs',		count(case when a.bank_card_auth=2 or a.phone_address_book_auth=2 or a.user_base_msg_auth=2 or a.phone_record_auth=2 or a.identity_auth=2 or a.taobao_auth=2 then u.id else null end ) as 'rzsb',		count(case when a.bank_card_auth=1 and a.phone_address_book_auth=1 and a.user_base_msg_auth=1 and a.phone_record_auth=1 and a.identity_auth=1 and a.taobao_auth=1 then u.id else null end ) as 'rzcg',		count(case when a.bank_card_auth=0 and a.phone_address_book_auth=0 and a.user_base_msg_auth=0 and a.phone_record_auth=0 and a.identity_auth=0 and a.taobao_auth=0 then u.id else null end ) as 'wrz'		FROM 	user u JOIN authentication a ON u.id=a.user_id  where u.source is NOT null		 GROUP BY u.source) b join channel ch on b.cid=ch.id )bb SET shs.cid=bb.cid,shs.zc=bb.zc,shs.rzrs=bb.rzrs,shs.rzsb=bb.rzsb,shs.rzcg=bb.rzcg,shs.rzwwc=bb.rzwwc,shs.wrz=bb.wrz WHERE shs.cid=bb.cid    </update>    <!-- 把申请等统计更新到channel表中 -->    <update id="updateChennlSumSqrs">     UPDATE channel_sum shs,        ( select						u.source as 'cid',						count(DISTINCT case when e.id is not null  then u.id else null end) as 'sqrs',						count(case when e.id is not null  then u.id else null end) as 'sqrss',						count(case when  e.`status`='已打款' or e.`status`='待打款' or e.`status`='已完结'  then u.id else null end) as 'tgrs',						count(case when  DATEDIFF(NOW(),o.upt_datetime)>30 and o.status != '已完结' then u.id else null end) as 'hzrs',						count(case when  DATEDIFF(NOW(),o.upt_datetime)>1 and o.status != '已完结' then u.id else null end) as 'yqrs'						from `user` u JOIN authentication a on u.id=a.user_id						LEFT JOIN evaluation e on u.id = e.user_id LEFT JOIN orders o on o.evaluation_id=e.id						where u.source is NOT null						GROUP BY u.source         )bb SET shs.sqrs=bb.sqrs,shs.sqrss=bb.sqrss        ,shs.tgrs=bb.tgrs,shs.hzrs=bb.hzrs,shs.yqrs=bb.yqrs WHERE shs.cid=bb.cid    </update>    <!-- 统计出放款人数，与放款总次数 -->    <select id="selectFfrs" resultType="String">        select c.id,c.`name` as 'name',        count(distinct u.id) as'fkrs',        count(case when e.`status`='已打款' or e.`status`='已完结'  then u.id else null end ) as 'fkrss',        u.`gmt_datetime` as 'gmt_datetime'        from channel c JOIN `user` u on c.id=u.source JOIN authentication a on u.id=a.user_id        JOIN evaluation e on e.user_id = u.id        where u.source is not null and (e.`status`='已打款' or e.`status`='已完结')        GROUP BY c.id    </select>    <!-- 统计出放款人数与放款次数放入表中 -->    <update id="updateFfrs">        UPDATE channel_sum shs,(select c.id,c.`name` as 'name',        count(distinct u.id) as'fkrs',        count(case when e.`status`='已打款' or e.`status`='已完结'  then u.id else null end ) as 'fkrss',        u.`gmt_datetime` as 'gmt_datetime'        from channel c JOIN `user` u on c.id=u.source JOIN authentication a on u.id=a.user_id        JOIN evaluation e on e.user_id = u.id        where u.source is not null and (e.`status`='已打款' or e.`status`='已完结')        GROUP BY c.id)cc set shs.fkrs=cc.fkrs,shs.fkrss=cc.fkrss WHERE shs.name=cc.name    </update>    <!-- 把没有通过渠道下载的用户添加到表中 -->    <update id="updateAppZC">        UPDATE channel_sum shs,	( select		COUNT(u.id) as 'zc',		count(case when a.bank_card_auth!=0 or phone_address_book_auth!=0 or user_base_msg_auth!=0 or phone_record_auth!=0 or identity_auth!=0 or taobao_auth!=0 then u.id else null end) as 'rzrs',		count(case when a.bank_card_auth=2 or a.phone_address_book_auth=2 or a.user_base_msg_auth=2 or a.phone_record_auth=2 or a.identity_auth=2 or a.taobao_auth=2 then u.id else null end ) as 'rzsb',		count(case when a.bank_card_auth=1 and a.phone_address_book_auth=1 and a.user_base_msg_auth=1 and a.phone_record_auth=1 and a.identity_auth=1 and a.taobao_auth=1 then u.id else null end ) as 'rzcg',		count(case when a.bank_card_auth=0 and a.phone_address_book_auth=0 and a.user_base_msg_auth=0 and a.phone_record_auth=0 and a.identity_auth=0 and a.taobao_auth=0 then u.id else null end ) as 'wrz'		FROM 	user u JOIN authentication a ON u.id=a.user_id  where u.source is null		) b SET shs.zc=b.zc,shs.rzrs=b.rzrs,shs.rzsb=b.rzsb,shs.rzcg=b.rzcg,shs.rzwwc=(b.rzrs-(b.rzsb+b.rzcg)),shs.wrz=b.wrz WHERE shs.id=0    </update>    <!-- 把没渠道的用户申请单等添加，到表中 -->    <update id="updateAppSQ">        UPDATE channel_sum shs,        ( select        count(DISTINCT case when e.id is not null  then u.id else null end) as 'sqrs',        count(case when e.id is not null  then u.id else null end) as 'sqrss',        count(case when  e.`status`='已打款' or e.`status`='待打款' or e.`status`='已完结'  then u.id else null end) as 'tgrs',        count(case when  DATEDIFF(NOW(),o.upt_datetime)>30 and o.status != '已完结' then u.id else null end) as 'hzrs',        count(case when  DATEDIFF(NOW(),o.upt_datetime)>1 and o.status != '已完结' then u.id else null end) as 'yqrs'        from `user` u JOIN authentication a on u.id=a.user_id        LEFT JOIN evaluation e on u.id = e.user_id LEFT JOIN orders o on o.evaluation_id=e.id        where u.source is null        GROUP BY u.source        )bb SET shs.sqrs=bb.sqrs,shs.sqrss=bb.sqrss        ,shs.tgrs=bb.tgrs,shs.hzrs=bb.hzrs,shs.yqrs=bb.yqrs WHERE shs.id=0    </update>    <!-- 统计出未通过渠道放款人数与放款次数放入表中 -->    <update id="updateAppFfrs">        UPDATE channel_sum shs,(        select count(distinct u.id) as'fkrs',        count(case when e.`status`='已打款' or e.`status`='已完结'  then u.id else null end ) as 'fkrss',        u.`gmt_datetime` as 'gmt_datetime'        from user u JOIN authentication a on u.id=a.user_id JOIN evaluation e on e.user_id = u.id        where u.source is null and (e.`status`='已打款' or e.`status`='已完结')) cc set shs.fkrs=cc.fkrs,shs.fkrss=cc.fkrss WHERE shs.id=0    </update></mapper>