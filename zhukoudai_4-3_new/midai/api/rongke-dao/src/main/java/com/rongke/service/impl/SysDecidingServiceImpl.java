package com.rongke.service.impl;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.service.impl.ServiceImpl;import com.google.common.collect.Maps;import com.rongke.mapper.SysDecidingMapper;import com.rongke.model.SysDeciding;import com.rongke.service.SysDecidingService;import com.rongke.utils.ans.R;import org.springframework.stereotype.Service;import java.util.List;import java.util.Map;/** *  app 功能管理 */@Servicepublic class SysDecidingServiceImpl extends ServiceImpl<SysDecidingMapper,SysDeciding> implements SysDecidingService {    public R decidingAll() {        List<SysDeciding> sysDecidings = this.selectList(null);        Map<String,Object> sfz = Maps.newHashMap();        Map<String,Object> yys = Maps.newHashMap();        Map<String,Object> tb = Maps.newHashMap();        if(!sysDecidings.isEmpty()){            for(SysDeciding s:sysDecidings){                if(s.getJcKey().indexOf("sfz")!=-1){                    sfz.put(s.getJcKey(),s);                }                if(s.getJcKey().indexOf("yys")!=-1){                    yys.put(s.getJcKey(),s);                }                if(s.getJcKey().indexOf("tb")!=-1){                    tb.put(s.getJcKey(),s);                }            }        }        return R.ok().put("yys",yys).put("tb",tb).put("sfz",sfz);    }    public Map<String, SysDeciding> decidingType(Integer type) {        List<SysDeciding> list = this.selectList(new EntityWrapper<SysDeciding>().eq("type", type));        Map<String, SysDeciding> result = Maps.newHashMap();        if(!list.isEmpty()){            for(SysDeciding l:list){                result.put(l.getJcKey(),l);            }            return result;        }        return null;    }}