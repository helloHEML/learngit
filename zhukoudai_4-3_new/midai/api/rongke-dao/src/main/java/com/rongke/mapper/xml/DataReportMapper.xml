<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.rongke.mapper.DataReportMapper">    <resultMap type="com.rongke.model.DataReport" id="mDataReport" autoMapping="true">    </resultMap>    <sql id="mColumnsSql">        id AS id,        member_count AS memberCount,        register_count AS registerCount,        order_count AS orderCount,        money_out AS moneyOut,        money_in AS moneyIn    </sql>    <select id="selectTodayMemberCount" parameterType="string" resultType="java.lang.Integer">        SELECT COUNT(1)        FROM `authentication`         WHERE authentication.`user_base_msg_auth`=1         AND  datediff(authentication.upt_datetime,now())=0    </select>    <select id="selectTodayRegisterCount" parameterType="string" resultType="java.lang.Integer">        SELECT COUNT(1) FROM `authentication` WHERE  datediff(authentication.gmt_datetime,now())=0    </select>    <select id="selectTodayMoneyOut" parameterType="string" resultType="java.lang.String">        SELECT SUM(evaluation.pay_money) FROM `evaluation` ,orders        WHERE  evaluation.id=orders.evaluation_id        AND DATEDIFF(orders.gmt_datetime,NOW())=0    </select>    <select id="selectTodayMoneyIn" parameterType="string" resultType="java.lang.String">        SELECT SUM(money) FROM `repay_record` WHERE  datediff(repay_record.gmt_datetime,now())=0    </select>    <!--    <select id="moneyInListByYear" parameterType="string" resultType="com.rongke.model.RepayRecord">            SELECT            repay_record.gmt_datetime AS gmtDatetime,            repay_record.money AS money            FROM `repay_record`            WHERE YEAR(repay_record.`gmt_datetime`)=#{year};        </select>-->    <select id="moneyInListByYear" parameterType="string" resultType="java.util.Map">      SELECT SUM(money) AS money , DATE_FORMAT(gmt_datetime,'%Y-%m') AS time      FROM repay_record      WHERE YEAR(gmt_datetime)=#{year}      GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m');    </select>    <!-- <select id="moneyOutListByYear" parameterType="string" resultType="com.rongke.model.Evaluation">         SELECT         evaluation.upt_datetime AS uptDatetime,         evaluation.pay_money AS payMoney         FROM `evaluation` WHERE YEAR(evaluation.`upt_datetime`)=#{year}         AND batch_no is not NULL     </select>-->    <select id="moneyOutListByYear" parameterType="string" resultType="java.util.Map">      SELECT SUM(pay_money) AS payMoney,       DATE_FORMAT(upt_datetime,'%Y-%m') AS time      FROM evaluation      WHERE batch_no IS NOT NULL      and YEAR(evaluation.`upt_datetime`)=#{year}      GROUP BY DATE_FORMAT(upt_datetime,'%Y-%m');    </select>    <select id="findDailyStatement" parameterType="java.util.Map" resultType="com.rongke.model.DataReportVo">        SELECT DATE_FORMAT(a.gmt_datetime, '%Y-%m-%d') AS gmtTime , SUM(a.evaluation_price) AS price, COUNT(1) number ,SUM(assess_money) assessMoney ,SUM(final_money) finalMoney        FROM        (SELECT evaluation.`evaluation_price` , evaluation.`gmt_datetime` , param_setting.`assess_money` ,evaluation.`final_money` FROM `evaluation`,param_setting WHERE evaluation.`param_setting_id`=param_setting.`id` AND gmt_datetime BETWEEN #{date1} AND #{date2} AND batch_no IS not NULL ) a        GROUP BY gmtTime    </select>    <select id="findRepayRecordGroupTime" parameterType="java.util.Map" resultType="com.rongke.model.DataReportVo">        SELECT SUM(money) repayRecordMoney,gmtTime,COUNT(1) repayRecordNumber, sum(overtimeMoney) repayRecordMoneyOverDue FROM        (SELECT  money,DATE_FORMAT(repay_record.`gmt_datetime`, '%Y-%m-%d') AS gmtTime,overtime_money overtimeMoney FROM `repay_record` WHERE repay_record.`gmt_datetime` BETWEEN #{date1} AND #{date2} ) a        GROUP BY gmtTime    </select>    <select id="findRepayRecordOverdue"  parameterType="java.util.Map"  resultType="com.rongke.model.DataReportVo">        SELECT SUM(money) repayRecordMoneyOverDue,gmtTime ,COUNT(1) repayRecordNumber FROM        (SELECT  money,DATE_FORMAT(repay_record.`gmt_datetime`, '%Y-%m-%d') AS gmtTime FROM `repay_record` WHERE repay_record.`gmt_datetime` BETWEEN #{date1} AND #{date2} AND repay_record.`type`=2) a        GROUP BY gmtTime    </select>    <select id="findOverdueMoneyGroupTime" parameterType="java.util.Map" resultType="com.rongke.model.DataReportVo">        SELECT SUM(money) repayRecordMoney,gmtTime FROM        (SELECT  money,DATE_FORMAT(repay_record.`gmt_datetime`, '%Y-%m-%d') AS gmtTime FROM `repay_record` WHERE repay_record.`gmt_datetime` BETWEEN #{date1} AND #{date2} ) a        GROUP BY gmtTime    </select>    <select id="findUserAuditStatement"  resultType="com.rongke.model.DataReportVo">        SELECT admin.`id`,admin.`login_name` adminLoginName,admin.`name` adminName, COUNT(1) number        FROM `admin` JOIN `admin_role` ON admin.`admin_role_id`=admin_role.`id`        JOIN `authentication` ON authentication.`auditor_id`=admin.`id`        WHERE admin_role.`type`=1        GROUP BY admin.`id`    </select>    <select id="findUserAuditStatementNo"  resultType="com.rongke.model.DataReportVo">        SELECT admin.`id`,admin.`login_name` adminLoginName,admin.`name` adminName, COUNT(1) numberNo        FROM `admin` JOIN `admin_role` ON admin.`admin_role_id`=admin_role.`id`        JOIN `authentication` ON authentication.`auditor_id`=admin.`id`        WHERE admin_role.`type`=1        AND authentication.`user_base_msg_auth`=2        GROUP BY admin.`id`    </select>    <select id="payMoneyAuditStatement"  resultType="com.rongke.model.DataReportVo">        SELECT admin.`id`,admin.`login_name` adminLoginName,admin.`name` adminName, COUNT(1) number FROM `admin`,`admin_role`,`evaluation`        WHERE admin.`admin_role_id`=admin_role.`id`        AND evaluation.`admin_id`=admin.`id`        AND admin_role.`type`=5        GROUP BY admin.`id`    </select>    <select id="payMoneyAuditStatementNo"  resultType="com.rongke.model.DataReportVo">        SELECT admin.`id`,admin.`login_name` adminLoginName,admin.`name` adminName, COUNT(1) numberNo FROM `admin`,`admin_role`,`evaluation`        WHERE admin.`admin_role_id`=admin_role.`id`        AND evaluation.`admin_id`=admin.`id`        AND admin_role.`type`=5        AND evaluation.`status`='拒绝'        GROUP BY admin.`id`    </select>    <select id="tjuserCount" resultType="java.util.Map">        select  count(u.id) as 'zz',          count(DISTINCT case when a.bank_card_auth=1 and a.phone_address_book_auth=1 and a.user_base_msg_auth=1 and a.phone_record_auth=1 and a.identity_auth=1 and a.taobao_auth=1 then u.id else null end ) as 'zr',          count(case when DATE_FORMAT(u.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(NOW(),'%Y-%m-%d') then u.id else null end) as 'jz',          count(DISTINCT case when DATE_FORMAT(u.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(NOW(),'%Y-%m-%d') and a.bank_card_auth=1 and a.phone_address_book_auth=1 and a.user_base_msg_auth=1 and a.phone_record_auth=1 and a.identity_auth=1 and a.taobao_auth=1 then u.id else null end ) as 'jr'        from user u LEFT JOIN authentication a on u.id = a.user_id;    </select>    <select id="tjevaCount" resultType="java.util.Map">        select count(o.id) as 'orderCount',          SUM(case when e.`status`='已打款' or e.`status`='已完结' then e.final_money else 0 end) as 'zfk',          SUM(rr.money) as 'zhk',          SUM(case when DATE_FORMAT(e.upt_datetime,'%Y-%m-%d')=DATE_FORMAT(NOW(),'%Y-%m-%d') and (e.`status`='已打款' or e.`status`='已完结') then e.final_money else 0 end) as 'jfk',          (select sum(money) from repay_record where DATE_FORMAT(gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(NOW(),'%Y-%m-%d')) as 'jhk'        from orders o LEFT JOIN evaluation e on o.evaluation_id = e.id LEFT JOIN (select order_id,SUM(money)as 'money' from repay_record GROUP BY  order_id) rr on o.id = rr.order_id    </select>    <select id="tjHomeYear" resultType="java.util.Map">        select a1.date,SUM(a1.sjdk) as 'dk',sum(a2.money)as 'hk' from            (                select DATE_FORMAT(o.gmt_datetime,'%Y-%m')as 'date',                       coalesce(sum(e.final_money),0)as 'sjdk'                from orders o LEFT JOIN evaluation e on o.evaluation_id = e.id                group by DATE_FORMAT(o.gmt_datetime,'%Y-%m')            )a1 LEFT JOIN            (                select  DATE_FORMAT(gmt_datetime,'%Y-%m')as 'date',coalesce(sum(money),0) as 'money'                from repay_record GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m')            ) a2 on a1.`date` = a2.`date`        <where>            ${ew.sqlSegment}        </where>        GROUP BY a1.date    </select>    <select id="tjHomeMonth" resultType="java.util.Map">        select a1.date,coalesce(SUM(a1.sjdk),0) as 'dk',coalesce(SUM(a2.money),0)as 'hk' from            (                  select DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d')as 'date',                          coalesce(sum(e.final_money),0)as 'sjdk'                  from orders o LEFT JOIN evaluation e on o.evaluation_id = e.id                  group by DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d')              )a1 LEFT JOIN            (                select  DATE_FORMAT(gmt_datetime,'%Y-%m-%d')as 'date',coalesce(sum(money),0)as 'money'                from repay_record GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m-%d')            ) a2 on a1.`date` = a2.`date`        <where>            ${ew.sqlSegment}        </where>        GROUP BY a1.date    </select>    <!--    <select id="financeReportPage" resultType="java.util.Map">        select td.date,            coalesce(s1.fkCount,0) as 'fkCount',coalesce(s1.fkMoney,0) as 'fkMoney',            coalesce(s1.pgf,0) as 'pgf',coalesce(s1.jkMoney,0) as 'jkMoney',            coalesce(s2.zcxz,0)as 'zcxz',coalesce(s2.zcxzMoney,0)as 'zcxzMoney',            coalesce(s2.yqxz,0) as 'yqxz',coalesce(s2.yqxzMoney,0) as 'yqxzMoney',            coalesce(s2.ghbj,0)as 'ghbj',coalesce(s2.ghbjMoney,0)as 'ghbjMoney',            coalesce(s2.yqghbj,0)as 'yqghbj',coalesce(s2.yqghbjMoney,0)as 'yqghbjMoney',            coalesce(s3.scjks,0)as 'scjks',            coalesce(s3.scsjdzje,0)as 'scsjdzje',            coalesce(s3.scfkzje,0)as 'scfkzje',            coalesce(s4.fjks,0)as 'fjks',            coalesce(s4.fjsjdzje,0)as 'fjsjdzje',            coalesce(s4.fjfkzje,0)as 'fjfkzje'        from tb_day td LEFT JOIN        (            select                DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d') as 'date',count(o.id) as 'fkCount',                sum(e.rent_money)	as 'jkMoney',                sum(e.final_money) as 'fkMoney',                sum(case when ps.id is null then 55 else ps.assess_money end) as 'pgf'            from orders o LEFT JOIN evaluation e on o.evaluation_id = e.id LEFT JOIN param_setting ps on e.param_setting_id = ps.id            GROUP BY DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d')        )s1 on td.date = s1.date        LEFT JOIN        (            select                DATE_FORMAT(gmt_datetime,'%Y-%m-%d') as 'date',                count(case when rr.type=1 and days=7 then rr.id else null end) as 'zcxz',                sum(case when rr.type=1 and days=7 then rr.money else 0 end)as 'zcxzMoney',                count(case when rr.type!=3 and rr.type!=4 and (rr.days>7 or rr.type = 2)  then rr.id else null end) as 'yqxz',                sum(case when rr.type!=3 and rr.type!=4 and (rr.days>7 or rr.type = 2) then rr.money else 0 end)as 'yqxzMoney',                count(case when rr.type=3 and rr.money=e.rent_money then rr.id else null end) as 'ghbj',                sum(case when rr.type=3 and rr.money=e.rent_money then rr.money else 0 end)as 'ghbjMoney',                count(case when (rr.type=3 or rr.type=4) and rr.money >e.rent_money then rr.id else null end) as 'yqghbj',                sum(case when (rr.type=3 or rr.type=4) and rr.money>e.rent_money then rr.money else 0 end)as 'yqghbjMoney'            from repay_record rr LEFT JOIN (select id,evaluation_id from orders)o on rr.order_id = o.id            LEFT JOIN (select id,rent_money from evaluation where status='已打款' or status='已完结')e on o.evaluation_id = e.id            GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m-%d')        )s2 on td.date = s2.date        LEFT JOIN        (        select        DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d') as 'date',        count(case when us.frequency=2 then us.id else null end) as 'scjks',        sum(e.pay_money) as 'scsjdzje',        sum(e.rent_money) as 'scfkzje'        from `user` us        LEFT JOIN (select gmt_datetime,user_id,rent_money,pay_money from evaluation where status='已打款' or status='已完结')e on us.id = e.user_id        where us.frequency=2        GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m-%d')        )s3        on td.date = s3.date        LEFT JOIN        (        select        DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d') as 'date',        count(case when us.frequency>2 then us.id else null end) as 'fjks',        sum(e.pay_money) as 'fjsjdzje',        sum(e.rent_money) as 'fjfkzje'        from `user` us        LEFT JOIN (select gmt_datetime,user_id,rent_money,pay_money from evaluation where status='已打款' or status='已完结')e on us.id = e.user_id        where us.frequency>2        GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m-%d')        )s4        on td.date = s4.date        <where>            ${ew.sqlSegment}        </where>    </select>    -->    <select id="financeReportPage" resultType="java.util.Map">        select td.date,        coalesce(s1.fkCount,0) as 'fkCount',coalesce(s1.fkMoney,0) as 'fkMoney',        coalesce(s1.pgf,0) as 'pgf',coalesce(s1.jkMoney,0) as 'jkMoney',        coalesce(s2.zcxz,0)as 'zcxz',coalesce(s2.zcxzMoney,0)as 'zcxzMoney',        coalesce(s2.yqxz,0) as 'yqxz',coalesce(s2.yqxzMoney,0) as 'yqxzMoney',        coalesce(s2.ghbj,0)as 'ghbj',coalesce(s2.ghbjMoney,0)as 'ghbjMoney',        coalesce(s2.yqghbj,0)as 'yqghbj',coalesce(s2.yqghbjMoney,0)as 'yqghbjMoney',        coalesce(s3.scjks,0)as 'scjks',        coalesce(s3.scsjdzje,0)as 'scsjdzje',        coalesce(s3.scfkzje,0)as 'scfkzje',        coalesce(s4.fjks,0)as 'fjks',        coalesce(s4.fjsjdzje,0)as 'fjsjdzje',        coalesce(s4.fjfkzje,0)as 'fjfkzje'        from tb_day td LEFT JOIN        (        select        DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d') as 'date',        count(o.id) as 'fkCount',        sum(e.rent_money)  as 'jkMoney',        sum(e.final_money) as 'fkMoney',        sum(case when ps.id is null then 55 else ps.assess_money end) as 'pgf'        from orders o LEFT JOIN evaluation e on o.evaluation_id = e.id LEFT JOIN param_setting ps on e.param_setting_id = ps.id        GROUP BY DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d')        )s1 on td.date = s1.date        LEFT JOIN        (        select        DATE_FORMAT(gmt_datetime,'%Y-%m-%d') as 'date',        count(case when rr.type=1 and days=7 then rr.id else null end) as 'zcxz',        sum(case when rr.type=1 and days=7 then rr.money else 0 end)as 'zcxzMoney',        count(case when rr.type!=3 and rr.type!=4 and (rr.days>7 or rr.type = 2)  then rr.id else null end) as 'yqxz',        sum(case when rr.type!=3 and rr.type!=4 and (rr.days>7 or rr.type = 2) then rr.money else 0 end)as 'yqxzMoney',        count(case when rr.type=3 and rr.money=e.rent_money then rr.id else null end) as 'ghbj',        sum(case when rr.type=3 and rr.money=e.rent_money then rr.money else 0 end)as 'ghbjMoney',        count(case when (rr.type=3 or rr.type=4) and rr.money >e.rent_money then rr.id else null end) as 'yqghbj',        sum(case when (rr.type=3 or rr.type=4) and rr.money>e.rent_money then rr.money else 0 end)as 'yqghbjMoney'        from repay_record rr LEFT JOIN (select id,evaluation_id from orders)o on rr.order_id = o.id        LEFT JOIN (select id,rent_money from evaluation where status='已打款' or status='已完结')e on o.evaluation_id = e.id        GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m-%d')        )s2 on td.date = s2.date        LEFT JOIN        (        select        DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d') as 'date',        count(o.id) as 'scjks',        sum(e.pay_money)  as 'scsjdzje',        sum(e.rent_money) as 'scfkzje'        from orders o LEFT JOIN evaluation e on o.evaluation_id = e.id        LEFT JOIN param_setting ps on e.param_setting_id = ps.id        WHERE o.hm_time=1        GROUP BY DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d')        )s3        on td.date = s3.date        LEFT JOIN        (        select        DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d') as 'date',        count(o.id) as 'fjks',        sum(e.pay_money)  as 'fjsjdzje',        sum(e.rent_money) as 'fjfkzje'        from orders o LEFT JOIN evaluation e on o.evaluation_id = e.id        LEFT JOIN param_setting ps on e.param_setting_id = ps.id        WHERE o.hm_time>1        GROUP BY DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d')        )s4        on td.date = s4.date        <where>            ${ew.sqlSegment}        </where>    </select>    <select id="TJrepaymentRate" resultType="java.util.Map">        select        a.date,        coalesce((case when b.yh is not null and c.yh is not null then b.yh+c.yh when b.yh is null then c.yh when c.yh is null then b.yh end),0)as 'yh',        coalesce((case when b.yqwh is not null and c.yqyh is not null then b.yqwh+c.yqyh when b.yqwh is null then c.yqyh when c.yqyh is null then b.yqwh end),0)as'yq',        coalesce(c.yqyh,0) as 'yqyh',        coalesce(b.yqwh,0) as 'yqwh',        coalesce(c.zchk,0) as 'zchk',        coalesce((case when DATEDIFF(a.date,NOW())=0 then 0 when c.`1` is not null and b.yqwh is not null then c.`1`+b.yqwh when c.`1` is null then b.yqwh when b.yqwh is null then c.`1` end),0)        as 'one',        coalesce((case when DATEDIFF(a.date,NOW())=-1 then 0 when c.`2` is not null and b.yqwh is not null then c.`2`+b.yqwh when c.`2` is null then b.yqwh when b.yqwh is null then c.`2` end),0)        as 'two',        coalesce((case when DATEDIFF(a.date,NOW())>=-2 then 0 when c.`3` is not null and b.yqwh is not null then c.`3`+b.yqwh when c.`3` is null then b.yqwh when b.yqwh is null then c.`3` end),0)        as 'three',        coalesce((case when DATEDIFF(a.date,NOW())>=-3 then 0 when c.`4` is not null and b.yqwh is not null then c.`4`+b.yqwh when c.`4` is null then b.yqwh when b.yqwh is null then c.`4` end),0)        as 'four',        coalesce((case when DATEDIFF(a.date,NOW())>=-4 then 0 when c.`5` is not null and b.yqwh is not null then c.`5`+b.yqwh when c.`5` is null then b.yqwh when b.yqwh is null then c.`5` end),0)        as 'five',        coalesce((case when DATEDIFF(a.date,NOW())>=-5 then 0 when c.`6` is not null and b.yqwh is not null then c.`6`+b.yqwh when c.`6` is null then b.yqwh when b.yqwh is null then c.`6` end),0)        as 'six',        coalesce((case when DATEDIFF(a.date,NOW())>=-6 then 0 when c.`7` is not null and b.yqwh is not null then c.`7`+b.yqwh when c.`7` is null then b.yqwh when b.yqwh is null then c.`7` end),0)        as 'seven',        coalesce(d.hks,0) as 'hks',        coalesce((case when d.hks is not null and b.yqwh is not null then b.yqwh+d.hks when b.yqwh is null then d.hks when d.hks is null then b.yqwh end),0)        as 'hkss'        from tb_day a LEFT JOIN        (select        DATE_FORMAT(DATE_ADD(upt_datetime,INTERVAL 1 day)	,'%Y-%m-%d') as 'date',        count(id) as 'yh',        count(case when DATEDIFF(upt_datetime,now())&lt;-1 then id else null end) as 'yqwh'        from orders where `status`!='已完结' and  upt_datetime is not null        GROUP BY        DATE_FORMAT(DATE_ADD(upt_datetime,INTERVAL 1 day),'%Y-%m-%d') order by date DESC) b        on a.date = b.date LEFT JOIN        (select        DATE_FORMAT(o.upt_datetime,'%Y-%m-%d') as 'date',        count(o.id) as 'yh',        count(case when o.money>e.rent_money then o.id else null end)as 'yqyh',        count(case when o.money&lt;=e.rent_money then o.id else null end)as 'zchk',        count(case when (o.money-e.rent_money)/(e.rent_money*ps.overtime_money)>0 then o.id else null end) as '1',        count(case when (o.money-e.rent_money)/(e.rent_money*ps.overtime_money)>1 then o.id else null end) as '2',        count(case when (o.money-e.rent_money)/(e.rent_money*ps.overtime_money)>2 then o.id else null end) as '3',        count(case when (o.money-e.rent_money)/(e.rent_money*ps.overtime_money)>3 then o.id else null end) as '4',        count(case when (o.money-e.rent_money)/(e.rent_money*ps.overtime_money)>4 then o.id else null end) as '5',        count(case when (o.money-e.rent_money)/(e.rent_money*ps.overtime_money)>5 then o.id else null end) as '6',        count(case when (o.money-e.rent_money)/(e.rent_money*ps.overtime_money)>6 then o.id else null end) as '7'        from orders o JOIN evaluation e on o.evaluation_id = e.id LEFT JOIN param_setting ps on e.param_setting_id = ps.id        where o.`status`='已完结' and  o.upt_datetime is not null        GROUP BY        DATE_FORMAT(o.upt_datetime,'%Y-%m-%d') order by date DESC)c        on a.date = c.date LEFT JOIN        (select        DATE_FORMAT(gmt_datetime,'%Y-%m-%d')  as 'date',        count(id) as 'hks'        from repay_record GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m-%d') order by date DESC) d        on a.date = d.date        <where>            ${ew.sqlSegment}        </where>    </select>    <select id="newTJOrderOrPay" resultType="java.util.Map">        select        count(o.id)as 'zdd',        count(case when o.`status`='已完结' then o.id else null end) as 'wjdd',        count(case when o.`status`!='已完结' and DATEDIFF(o.upt_datetime,NOW())>=-1 then o.id else null end ) as 'dhkdd',        count(case when o.`status`!='已完结' and DATEDIFF(o.upt_datetime,NOW())&lt;-1 then o.id else null end) as 'qzdd',        sum(e.final_money) as 'fkze',        coalesce((select SUM(money) from repay_record),0)as 'hkze',        sum(case when o.`status`!='已完结' and DATEDIFF(o.upt_datetime,NOW())&lt;-1 then e.rent_money else 0 end) as 'qkze',        sum(case when DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(NOW(),'%Y-%m-%d') then e.final_money else 0 end) as 'jrfk',        sum(case when rr.date=DATE_FORMAT(NOW(),'%Y-%m-%d') then rr.money else 0 end) as 'jrhk',        sum(case when DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(DATE_ADD(now(),INTERVAL -1 day),'%Y-%m-%d') then e.final_money else 0 end)as'zrfk',        sum(case when rr.date=DATE_FORMAT(DATE_ADD(now(),INTERVAL -1 day),'%Y-%m-%d') then rr.money else 0 end) as 'zrhk'        from (select id,evaluation_id,money,gmt_datetime,upt_datetime,`status` from orders where upt_datetime is not null) o LEFT JOIN evaluation e on o.evaluation_id = e.id        LEFT JOIN (select id,order_id,money,DATE_FORMAT(gmt_datetime,'%Y-%m-%d') as 'date' from repay_record where        DATE_FORMAT(gmt_datetime,'%Y-%m-%d') BETWEEN  DATE_FORMAT(DATE_ADD(now(),INTERVAL -1 day),'%Y-%m-%d') and DATE_FORMAT(gmt_datetime,'%Y-%m-%d')        ) rr on o.id = rr.order_id    </select>    <select id="newTJHomeUser" resultType="java.util.Map">        select            (select count(1) from authentication)	as 'zzc',            (select count(1) from authentication where phone_record_auth = 1 and bank_card_auth=1 and phone_address_book_auth = 1 and user_base_msg_auth=1 and            identity_auth=1 and  taobao_auth = 1) as 'zrz',            count(case when DATE_FORMAT(gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(NOW(),'%Y-%m-%d') then id else null end) as 'jrzc',            count(case when phone_record_auth = 1 and bank_card_auth=1 and phone_address_book_auth = 1 and user_base_msg_auth=1 and identity_auth=1 and taobao_auth = 1 and DATE_FORMAT(gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(NOW(),'%Y-%m-%d') then id else null end) as 'jrrz',            count(case when DATE_FORMAT(gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(DATE_ADD(now(),INTERVAL -1 day),'%Y-%m-%d') then id else null end) as 'zrzc',            count(case when phone_record_auth = 1 and bank_card_auth=1 and phone_address_book_auth = 1 and user_base_msg_auth=1 and identity_auth=1 and            taobao_auth = 1 and DATE_FORMAT(gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(DATE_ADD(now(),INTERVAL -1 day),'%Y-%m-%d') then id else null end) as 'zrrz'        from authentication        WHERE DATE_FORMAT(gmt_datetime,'%Y-%m-%d') BETWEEN DATE_FORMAT(DATE_ADD(now(),INTERVAL -1 day),'%Y-%m-%d') AND DATE_FORMAT(gmt_datetime,'%Y-%m-%d')    </select>    <!--    <select id="newTJCardEcharts" resultType="java.util.Map">          select t1,t2,t3,t4,t5,t6,t7,t8,t9,t10 from            (   select                    DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d') as 'date',                    count(e.id) as 't1',                    count(case when DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d') = DATE_FORMAT(u.gmt_datetime,'%Y-%m-%d') then e.id else null end ) as 't2',                    count(case when DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d') != DATE_FORMAT(u.gmt_datetime,'%Y-%m-%d') then e.id else null end ) as 't3',                    count(case when e.`status`='已完结' or e.`status`='已打款' then e.id else null end ) as 't4',                    count(case when e.eva_number=1 and (e.`status`='已完结' or e.`status`='已打款') then e.id else null end ) as 't5',                    count(case when e.eva_number!=1 and (e.`status`='已完结' or e.`status`='已打款') then e.id else null end ) as 't6',                    (select count(id) from orders where `status`!='已完结' and DATEDIFF(upt_datetime,NOW())=-1 ) as 't9',                    (select count(id) from orders where `status`!='已完结' and DATEDIFF(upt_datetime,NOW())=-2 ) as 't10'                from evaluation e join `user` u on e.user_id = u.id   where DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(now(),'%Y-%m-%d') and e.`status`!='申请中'                GROUP BY DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d')            ) a          LEFT JOIN (            select                DATE_FORMAT(gmt_datetime,'%Y-%m-%d') as 'date',                count(case when type=3 or type=4 then id end)	as 't7',                count(case when type=1 or type=2 then id end)	as 't8'            from repay_record where  DATE_FORMAT(gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(now(),'%Y-%m-%d') GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m-%d')            )b          on a.date = b.date    </select>    -->    <select id="newTJCardEcharts" resultType="java.util.Map">         select t1,t2,t3,t4,t5,t6,t7,t8,t9,t10 from        (   select        DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d') as 'date',        coalesce(count(e.id),0) as 't1',			  coalesce((select count(evaluation.user_id) from evaluation where DATE_FORMAT(evaluation.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(now(),'%Y-%m-%d') and evaluation.`status`!='申请中' and evaluation.eva_number=1),0) as 't2',				coalesce((select count(evaluation.user_id) from evaluation where DATE_FORMAT(evaluation.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(now(),'%Y-%m-%d') and evaluation.`status`!='申请中' and evaluation.eva_number!=1),0) as 't3',        coalesce((SELECT count(orders.id) FROM orders WHERE DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(now(),'%Y-%m-%d')),0) as 't4',        coalesce((SELECT count(orders.id) FROM orders WHERE DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(now(),'%Y-%m-%d') and orders.hm_time=1),0) as 't5',        coalesce((SELECT count(orders.id) FROM orders WHERE DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(now(),'%Y-%m-%d') and orders.hm_time>1),0) as 't6',        coalesce((select count(id) from orders where `status`!='已完结' and DATEDIFF(upt_datetime,NOW())=-1 ),0) as 't9',        coalesce((select count(id) from orders where `status`!='已完结' and DATEDIFF(upt_datetime,NOW())=-2 ),0) as 't10'        from evaluation e join `user` u on e.user_id = u.id   where DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(now(),'%Y-%m-%d') and e.`status`!='申请中'        GROUP BY DATE_FORMAT(e.gmt_datetime,'%Y-%m-%d')        ) a        LEFT JOIN (        select        DATE_FORMAT(gmt_datetime,'%Y-%m-%d') as 'date',        coalesce(count(case when type=3 or type=4 then id end),0)  as 't7',        coalesce(count(case when type=1 or type=2 then id end),0)  as 't8'        from repay_record where  DATE_FORMAT(gmt_datetime,'%Y-%m-%d')=DATE_FORMAT(now(),'%Y-%m-%d') GROUP BY DATE_FORMAT(gmt_datetime,'%Y-%m-%d')        )b        on a.date = b.date    </select></mapper>