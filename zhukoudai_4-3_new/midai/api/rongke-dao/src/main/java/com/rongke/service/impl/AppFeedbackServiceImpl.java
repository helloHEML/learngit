package com.rongke.service.impl;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.mapper.SqlHelper;import com.baomidou.mybatisplus.mapper.Wrapper;import com.baomidou.mybatisplus.plugins.Page;import com.baomidou.mybatisplus.service.impl.ServiceImpl;import com.rongke.mapper.AppFeedbackMapper;import com.rongke.model.AppFeedback;import com.rongke.service.AppFeedbackService;import com.rongke.utils.ans.PageUtils;import com.rongke.utils.ans.Query;import org.apache.commons.lang3.StringUtils;import org.springframework.stereotype.Service;import javax.annotation.Resource;import java.util.HashMap;import java.util.List;import java.util.Map;/** * @AppFeedbackServiceImpl * @用户反馈ServiceImpl * @version : Ver 1.0 */@Servicepublic class AppFeedbackServiceImpl extends ServiceImpl<AppFeedbackMapper, AppFeedback> implements AppFeedbackService {    @Resource    private AppFeedbackMapper appFeedbackMapper;    /**     * 查看用户反馈     * @param type     * @param phone     * @return     */   public Integer selectAllFeedBackTotal(Integer type,String phone){        Map<String,Object> map = new HashMap<>();        map.put("type",type);        map.put("phone",phone);        return appFeedbackMapper.selectAllFeedBackTotal(map);    }    public PageUtils selectAllFeedBackList(Map<String, Object> params) {        String search = (String) params.get("search");        if(StringUtils.isNotBlank(search)){            search = "%" + search + "%";        }        EntityWrapper<AppFeedback> wq = new EntityWrapper<>();        String authStatus = (String) params.get("authStatus");        if(StringUtils.isNotBlank(authStatus)) {            if(authStatus.equals("0")){                wq.where("a.bank_card_auth=0 and a.phone_address_book_auth=0 and a.user_base_msg_auth=0 and a.phone_record_auth=0 and a.identity_auth=0 and a.taobao_auth=0");            }else if(authStatus.equals("1")){                wq.where("a.bank_card_auth=1 and a.phone_address_book_auth=1 and a.user_base_msg_auth=1 and a.phone_record_auth=1 and a.identity_auth=1 and a.taobao_auth=1");            }else if(authStatus.equals("2")){                wq.where("a.bank_card_auth=2 or a.phone_address_book_auth=2 or a.user_base_msg_auth=2 or a.phone_record_auth=2 or a.identity_auth=2 or a.taobao_auth=2");            }else{                wq.where("a.bank_card_auth!=2 AND a.phone_address_book_auth !=2 " +                        "AND a.phone_record_auth !=2 AND a.user_base_msg_auth !=2 " +                        "and  a.identity_auth!=2  and taobao_auth!=2 and(a.bank_card_auth!=1 or " +                        "a.phone_address_book_auth !=1 or a.phone_record_auth !=1 " +                        "or a.user_base_msg_auth !=1 or a.identity_auth!=1 or a.taobao_auth!=1 )" +                        " and (a.bank_card_auth!=0 or a.phone_address_book_auth !=0 " +                        "or a.phone_record_auth !=0 or a.user_base_msg_auth !=0 or " +                        "a.identity_auth!=0 or a.taobao_auth!=0)", "0");            }        }        Page<Map<String, Object>> page = appFeedBackPage(new Query<Map<String, Object>>(params).getPage(),wq.                 where(StringUtils.isNotBlank(search),"(u.phone like {0} or u.real_name like {1})",search,search)                 .where("type = 0 ",0)                .between(StringUtils.isNotBlank((String) params.get("time1"))&&StringUtils.isNotBlank((String) params.get("time2")),"rr.gmt_datetime",params.get("time1"),params.get("time2"))        );        return new PageUtils(page);    }    /**     * 自定义mybatis-plus sql查询     */    public Page<Map<String,Object>> appFeedBackPage(Page<Map<String,Object>> page, Wrapper<AppFeedback> wrapper) {        SqlHelper.fillWrapper(page, wrapper);        page.setRecords(this.baseMapper.feedBackPage(page, wrapper));        return page;    }    /**     *@app查询聊天记录     */    public List<AppFeedback> selectFeedBackByUserId(Long userId) {        List<AppFeedback> appFeedbacks=null;        appFeedbacks=this.baseMapper.findFeedBackByUserId(userId);        return appFeedbacks;    }}