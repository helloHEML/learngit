<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.rongke.mapper.OrderMapper">    <resultMap type="com.rongke.model.Order" id="rmOrder">        <id property="id" column="id" />        <result property="evaluationId" column="evaluationId"/>        <result property="userCouponId" column="userCouponId"/>        <result property="dayRent" column="dayRent"/>        <result property="status" column="status"/>        <result property="gmtDatetime" column="gmtDatetime"/>        <result property="uptDatetime" column="uptDatetime"/>        <result property="terminalno" column="terminalno"/>        <result property="requestno" column="requestno"/>        <result property="orderNumber" column="orderNumber"/>        <result property="depositStatus" column="depositStatus"/>        <association property="evaluation" javaType="com.rongke.model.Evaluation" >            <id property="id" column="evaluation_id" />            <result property="userId" column="evaluation_userId"/>            <result property="name" column="evaluation_name"/>            <result property="accountFree" column="evaluation_accountFree"/>            <result property="storageCapacity" column="evaluation_storageCapacity"/>            <result property="color" column="evaluation_color"/>            <result property="screenShow" column="evaluation_screenShow"/>            <result property="serviceHistory" column="evaluation_serviceHistory"/>            <result property="frontPhoto" column="evaluation_frontPhoto"/>            <result property="backPhoto" column="evaluation_backPhoto"/>            <result property="parameterPhoto" column="evaluation_parameterPhoto"/>            <result property="evaluationPrice" column="evaluation_evaluationPrice"/>            <result property="status" column="evaluation_status"/>        </association>        <association property="userCoupon" javaType="com.rongke.model.UserCoupon" >            <id property="id" column="userCoupon_id" />        </association>    </resultMap>    <resultMap type="com.rongke.model.Order" id="mOrder">        <id property="id" column="order_id" />        <result property="evaluationId" column="order_evaluationId"/>        <result property="userCouponId" column="order_userCouponId"/>        <result property="dayRent" column="order_dayRent"/>        <result property="status" column="order_status"/>        <result property="adminId" column="order_adminId"/>        <result property="remark" column="order_remark"/>        <result property="depositBacktime" column="order_depositBacktime"/>        <result property="backDeposit" column="order_backDeposit"/>        <result property="gmtDatetime" column="order_gmtDatetime"/>        <result property="uptDatetime" column="order_uptDatetime"/>        <result property="terminalno" column="order_terminalno"/>        <result property="requestno" column="order_requestno"/>        <result property="orderNumber" column="order_orderNumber"/>        <result property="depositStatus" column="order_depositStatus"/>        <result property="money" column="order_money"/>        <association property="evaluation" javaType="com.rongke.model.Evaluation" >            <id property="id" column="evaluation_id" />            <result property="userId" column="evaluation_userId"/>            <result property="name" column="evaluation_name"/>            <result property="costMoney" column="evaluation_costMoney"/>            <result property="evaluationPrice" column="evaluation_evaluationPrice"/>            <result property="rentMoney" column="evaluation_rentMoney"/>            <result property="status" column="evaluation_status"/>            <result property="finalMoney" column="evaluation_finalMoney"/>            <result property="payMoney" column="evaluation_payMoney"/>            <result property="paramSettingId" column="evaluation_paramSettingId"/>            <association property="paramSetting" javaType="com.rongke.model.ParamSetting" >                <result property="assessMoney" column="paramSetting_assessMoney"/>                <result property="cashPledge" column="paramSetting_cashPledge"/>                <result property="rentDayMoney" column="paramSetting_rentDayMoney"/>                <result property="decreaseDay" column="paramSetting_decreaseDay"/>                <result property="decreaseproPortion" column="paramSetting_decreaseproPortion"/>                <result property="leastRentDayMoney" column="paramSetting_leastRentDayMoney"/>                <result property="overtimeDay" column="paramSetting_overtimeDay"/>                <result property="punishmentOvertimeDay" column="paramSetting_punishmentOvertimeDay"/>                <result property="overtimeMoney" column="paramSetting_overtimeMoney"/>                <result property="punishmentOvertimeMoney" column="paramSetting_punishmentOvertimeMoney"/>            </association>            <association property="user" javaType="com.rongke.model.User">                <id property="id" column="user_id" />                <result property="phone" column="user_phone"/>                <result property="realName" column="user_realName"/>            </association>        </association>        <association property="userCoupon" javaType="com.rongke.model.UserCoupon" >            <id property="id" column="userCoupon_id" />        </association>    </resultMap>    <sql id="mOrdersPkSql">        orders.id AS order_id,        orders.evaluation_id AS order_evaluationId,        orders.user_coupon_id AS order_userCouponId,        orders.day_rent AS order_dayRent,        orders.status AS order_status,        orders.admin_id AS order_adminId,        orders.remark AS order_remark,        orders.gmt_datetime AS order_gmtDatetime,        orders.upt_datetime AS order_uptDatetime,        orders.terminalno AS order_terminalno,        orders.requestno AS order_requestno,        orders.order_number AS order_orderNumber,        orders.deposit_status AS order_depositStatus    </sql>    <sql id="mOrdersSql">        id AS id,        evaluation_id AS evaluationId,        user_coupon_id AS userCouponId,        day_rent AS dayRent,        status AS status,        gmt_datetime AS gmtDatetime,        upt_datetime AS uptDatetime,        terminalno AS terminalno,        requestno AS requestno    </sql>     <select id="selectOrderPage" parameterType="java.util.Map" resultMap="mOrder">         SELECT         orders.id AS order_id,         orders.evaluation_id AS order_evaluationId,         orders.user_coupon_id AS order_userCouponId,         orders.day_rent AS order_dayRent,         CASE         WHEN orders.status = "已完结"         THEN '已完结'         WHEN datediff(orders.upt_datetime,now()) &gt;=0         THEN '已付租'         WHEN datediff(orders.upt_datetime,now())=-1         THEN '待付租'         ELSE '已欠租'         END AS order_status,         orders.admin_id AS order_adminId,         orders.remark AS order_remark,         orders.gmt_datetime AS order_gmtDatetime,         orders.upt_datetime AS order_uptDatetime,         orders.terminalno AS order_terminalno,         orders.requestno AS order_requestno,         orders.order_number AS order_orderNumber,         orders.deposit_status AS order_depositStatus,         orders.money AS order_money,         user.nick_name AS user_nickName,         user.real_name AS user_realName,         user.phone AS user_phone,         evaluation.rent_money AS evaluation_rentMoney,         evaluation.pay_money AS evaluation_payMoney,         evaluation.user_id AS evaluation_userId,         evaluation.param_setting_id AS evaluation_paramSettingId,         param_setting.assess_money AS paramSetting_assessMoney,         param_setting.cash_pledge AS paramSetting_cashPledge,         param_setting.rent_day_money AS paramSetting_rentDayMoney,         param_setting.decrease_day AS paramSetting_decreaseDay,         param_setting.decreasepro_portion AS paramSetting_decreaseproPortion,         param_setting.least_rent_day_money AS paramSetting_leastRentDayMoney,         param_setting.overtime_day AS paramSetting_overtimeDay,         param_setting.punishment_overtime_day AS paramSetting_punishmentOvertimeDay,         param_setting.overtime_money AS paramSetting_overtimeMoney,         param_setting.punishment_overtime_money AS paramSetting_punishmentOvertimeMoney         FROM          orders ,user,evaluation,param_setting         WHERE         orders.evaluation_id=evaluation.id         AND evaluation.user_id=user.id         AND param_setting.id=evaluation.param_setting_id         <if test="phone!=null and phone!=''">             AND user.phone like concat(concat('%',#{phone}),'%')         </if>         <if test="orderNumber!=null and orderNumber!=''">             AND user.phone like concat(concat('%',#{orderNumber}),'%')         </if>         <if test="userId!=null and userId!=''">             AND evaluation.user_id = #{userId}         </if>         <if test="adminId!=null and adminId!=''">             AND orders.admin_id = #{adminId}         </if>         <choose>             <when test="status=='已完结'">                 AND orders.status = "已完结"             </when>             <when test="status=='已付租'">                 AND datediff(orders.upt_datetime,now()) &gt;=0                 AND orders.status != "已完结"             </when>             <when test="status=='待付租'">                 AND orders.status!="已完结"                 AND datediff(orders.upt_datetime,now())=-1             </when>             <when test="status=='已欠租'">                 AND orders.status!="已完结"                 AND datediff(orders.upt_datetime,now()) &lt;-1             </when>             <when test="status=='催收'">                 AND orders.status!="已完结"                 AND datediff(orders.upt_datetime,now()) &lt;=-1             </when>         </choose>         <if test="userId!=null and userId!=''">             AND evaluation.user_id = #{userId}         </if>         <if test="time1!= null and time1!=''">             AND datediff(orders.upt_datetime,#{time1}) &gt;=-1         </if>         <if test="time2!= null and time2!=''">             AND datediff(orders.upt_datetime,#{time2}) &lt;=-1         </if>         ORDER BY orders.gmt_datetime DESC         <if test="_parameter.containsKey('startIndex')">             limit ${startIndex},${size}         </if>     </select>    <select id="selectOrderPageSize" parameterType="java.util.Map" resultType="java.lang.Integer">        SELECT         COUNT(*)        FROM        orders ,user,evaluation,param_setting        WHERE        orders.evaluation_id=evaluation.id        AND evaluation.user_id=user.id        AND param_setting.id=evaluation.param_setting_id        <if test="phone!=null and phone!=''">            AND user.phone like concat(concat('%',#{phone}),'%')        </if>        <if test="userId!=null and userId!=''">            AND evaluation.user_id = #{userId}        </if>        <if test="adminId!=null and adminId!=''">            AND orders.admin_id = #{adminId}        </if>        <choose>            <when test="status=='已完结'">                AND orders.status = "已完结"            </when>            <when test="status=='已付租'">                AND datediff(orders.upt_datetime,now()) &gt;=0                AND orders.status != "已完结"            </when>            <when test="status=='待付租'">                AND orders.status!="已完结"                AND datediff(orders.upt_datetime,now())=-1            </when>            <when test="status=='已欠租'">                AND orders.status!="已完结"                AND datediff(orders.upt_datetime,now()) &lt;-1            </when>            <when test="status=='催收'">                AND orders.status!="已完结"                AND datediff(orders.upt_datetime,now()) &lt;=-1            </when>        </choose>        <if test="orderNumber!=null and orderNumber!=''">            AND user.phone like concat(concat('%',#{orderNumber}),'%')        </if>        <if test="time1!= null and time1!=''">            AND datediff(orders.upt_datetime,#{time1}) &gt;=-1        </if>        <if test="time2!= null and time2!=''">            AND datediff(orders.upt_datetime,#{time2}) &lt;=-1        </if>    </select>    <select id="selectByCondition" parameterType="Order" resultMap="rmOrder">        select        <include refid="mOrdersSql"></include>        from orders        <where>            <if test="id!= null">                AND id=#{id}            </if>            <if test="evaluationId!= null">                AND evaluation_id=#{evaluationId}            </if>            <if test="userCouponId!= null">                AND user_coupon_id=#{userCouponId}            </if>            <if test="dayRent!= null">                AND day_rent=#{dayRent}            </if>            <if test="status!= null">                AND status=#{status}            </if>            <if test="gmtDatetime!= null">                AND gmt_datetime=#{gmtDatetime}            </if>            <if test="uptDatetime!= null">                AND upt_datetime=#{uptDatetime}            </if>            <if test="terminalno!= null">                AND terminalno=#{terminalno}            </if>            <if test="requestno!= null">                AND requestno=#{requestno}            </if>        </where>    </select>    <select id="selectOrderNotPage" parameterType="java.lang.String" resultMap="mOrder">        SELECT        orders.id AS order_id,        orders.evaluation_id AS order_evaluationId,        orders.user_coupon_id AS order_userCouponId,        orders.day_rent AS order_dayRent,        orders.status AS order_status,        orders.gmt_datetime AS order_gmtDatetime,        orders.upt_datetime AS order_uptDatetime,        orders.terminalno AS order_terminalno,        orders.requestno AS order_requestno,        orders.order_number AS order_orderNumber,        orders.money AS order_money,        orders.back_deposit AS order_backDeposit,        orders.deposit_status AS order_depositStatus,        orders.deposit_backtime AS order_depositBacktime,        evaluation.id AS evaluation_id,        evaluation.user_id AS evaluation_userId,        evaluation.name AS evaluation_name,        evaluation.evaluation_price AS evaluation_evaluationPrice,        evaluation.rent_money AS evaluation_rentMoney,        evaluation.final_money AS evaluation_finalMoney,        evaluation.status AS evaluation_status        FROM        orders ,evaluation        WHERE        orders.evaluation_id=evaluation.id        <if test="userId!=null and userId!=''">         and   evaluation.user_id=#{userId}        </if>        ORDER BY orders.gmt_datetime DESC    </select>    <select id="selectLastCollectionAdminId" resultType="java.lang.Integer">        SELECT admin_id FROM orders where id = (SELECT MAX(id) FROM `orders`)    </select>    <select id="selectNeedPayOrdersList" parameterType="java.lang.String" resultMap="mOrder">        SELECT         orders.id AS order_id,         orders.evaluation_id AS order_evaluationId,         evaluation.id AS evaluation_id,         evaluation.user_id AS evaluation_userId,         user.id AS user_id          FROM          evaluation,orders,user          WHERE          orders.evaluation_id=evaluation.id          AND orders.status!='已完结'          AND evaluation.user_id=user.id          AND datediff(now(),orders.upt_datetime)=1    </select>    <select id="selectPayFailOrderList" parameterType="java.lang.String" resultMap="mOrder">         SELECT         orders.id AS order_id,         orders.evaluation_id AS order_evaluationId,         evaluation.id AS evaluation_id,         evaluation.user_id AS evaluation_userId,         user.id AS user_id,         user.phone AS user_phone          FROM          evaluation,orders,user          WHERE          orders.evaluation_id=evaluation.id          AND evaluation.user_id=user.id          AND orders.status!='已完结'          AND datediff(now(),orders.upt_datetime) &gt;1 and datediff(now(),orders.upt_datetime) &lt; 30    </select>    <select id="selectPayFailOrderListToday" parameterType="java.lang.String" resultMap="mOrder">        SELECT        orders.id AS order_id,        orders.evaluation_id AS order_evaluationId,        evaluation.id AS evaluation_id,        evaluation.user_id AS evaluation_userId,        user.id AS user_id,        user.phone AS user_phone        FROM        evaluation,orders,user        WHERE        orders.evaluation_id=evaluation.id        AND evaluation.user_id=user.id        AND orders.status!='已完结'        AND datediff(now(),orders.upt_datetime) =1    </select> <!--   <select id="selectNeedReturnDeposit" parameterType="java.lang.String" resultMap="mOrder">        SELECT         orders.id AS order_id,         orders.evaluation_id AS order_evaluationId,         evaluation.user_id AS evaluation_userId,         evaluation.rent_money AS evaluation_rentMoney,         user.id AS user_id,         user.phone AS user_phone,         param_setting.cash_pledge AS paramSetting_cashPledge         from orders,evaluation,param_setting,user        WHERE        orders.evaluation_id=evaluation.id        AND evaluation.user_id=user.id        AND evaluation.param_setting_id=param_setting.id        AND orders.status='已完结' AND orders.deposit_status =1 AND datediff(now(),orders.upt_datetime)=1    </select>-->    <select id="selectOrderById" parameterType="java.lang.Long" resultMap="mOrder">        SELECT        orders.id AS order_id,        orders.evaluation_id AS order_evaluationId,        orders.day_rent AS order_dayRent,        orders.status AS order_status,        orders.gmt_datetime AS order_gmtDatetime,        orders.upt_datetime AS order_uptDatetime,        orders.terminalno AS order_terminalno,        orders.requestno AS order_requestno,        orders.order_number AS order_orderNumber,        evaluation.user_id AS evaluation_userId,        evaluation.rent_money AS evaluation_rentMoney,         param_setting.cash_pledge AS paramSetting_cashPledge,         param_setting.rent_day_money AS paramSetting_rentDayMoney,         param_setting.decrease_day AS paramSetting_decreaseDay,         param_setting.decreasepro_portion AS paramSetting_decreaseproPortion,         param_setting.least_rent_day_money AS paramSetting_leastRentDayMoney,         param_setting.overtime_day AS paramSetting_overtimeDay,         param_setting.punishment_overtime_day AS paramSetting_punishmentOvertimeDay,         param_setting.overtime_money AS paramSetting_overtimeMoney,         param_setting.punishment_overtime_money AS paramSetting_punishmentOvertimeMoney         FROM         orders,evaluation,param_setting         WHERE         orders.evaluation_id=evaluation.id         AND evaluation.param_setting_id=param_setting.id         AND orders.id=#{orderId}    </select>    <select id="selectEvaluationBytime" parameterType="java.lang.String" resultMap="mOrder">        SELECT        evaluation.pay_money AS evaluation_payMoney,        evaluation.final_money AS evaluation_finalMoney,        evaluation.rent_money AS evaluation_rentMoney,        orders.gmt_datetime AS order_gmtDatetime,        orders.upt_datetime AS order_uptDatetime        FROM evaluation,orders        WHERE  evaluation.id=orders.evaluation_id        <if test="time1!= null and time1!=''">            AND datediff(orders.gmt_datetime,#{time1}) &gt;=-1        </if>        <if test="time2!= null and time2!=''">            AND datediff(orders.gmt_datetime,#{time2}) &lt;=-1        </if>    </select>    <select id="orderTJYear" resultType="com.rongke.model.Order">        select DATE_FORMAT(o.gmt_datetime,'%Y-%m')as 'tjDate',sum(e.rent_money) as 'tjMoneyConut',sum(case when o.`status`='已完结' then e.rent_money else 0 end ) as 'tjCollectMoney',        sum(e.final_money) as 'tjRealPay',sum(case when DATEDIFF(o.upt_datetime,now())&lt;-1 and o.status!='已完结'  then e.rent_money else 0 end )as 'tjOverdueMoney' from orders o join evaluation e on o.evaluation_id = e.id        <where>            ${ew.sqlSegment}        </where>    </select>    <select id="orderTJMonth" resultType="com.rongke.model.Order">        select DATE_FORMAT(o.gmt_datetime,'%Y-%m-%d')as 'tjDate',sum(e.rent_money) as 'tjMoneyConut',sum(case when o.`status`='已完结' then e.rent_money else 0 end ) as 'tjCollectMoney',        sum(e.final_money) as 'tjRealPay',sum(case when DATEDIFF(o.upt_datetime,now())&lt;-1 and o.status!='已完结'  then e.rent_money else 0 end )as 'tjOverdueMoney'  from orders o join evaluation e on o.evaluation_id = e.id        <where>            ${ew.sqlSegment}        </where>    </select>    <select id="orderAdminTJ" resultType="java.util.Map">        select        sum(e.rent_money)as 'moneyCount',        sum(case when DATEDIFF(o.upt_datetime,NOW()) &lt;-1 and o.`status`!='已完结' then rent_money else 0 end ) as 'arrearsMoney',        count(distinct case when DATEDIFF(o.upt_datetime,NOW()) &lt;-1 and o.`status`!='已完结' then  e.user_id else null END) as 'arrearsUser',        count(case when DATEDIFF(o.upt_datetime,NOW()) &lt;-1 and o.`status`!='已完结'  then o.id else NULL end) as 'arrearsOrderCount',        SUM(case when (DATEDIFF(o.upt_datetime,NOW()) >=-1 and o.`status`!='已完结') or (o.`status`='已完结' and DATEDIFF(o.upt_datetime,NOW())=0 )  then e.rent_money else 0 end) AS 'dszje',        COALESCE(SUM(rr.money),0)	 AS 'jryh',        SUM(case when DATEDIFF(o.upt_datetime,NOW()) =-1  and o.`status`!='已完结' then e.rent_money else 0 end) AS 'jrwh'        from orders o LEFT JOIN evaluation e on o.evaluation_id = e.id        LEFT JOIN        (select order_id,coalesce(sum(money),0) as 'money'  from repay_record where DATE_FORMAT(gmt_datetime,'%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d') GROUP BY order_id) rr        on o.id = rr.order_id        <where>            ${ew.sqlSegment}        </where>    </select>    <!--查询应还订单和应还订单金额-->    <select id="CXDDYHJEDHK" resultType="java.util.Map">        select count(o.id) as "sum_amount",        sum(e.evaluation_price) as "sum_qk"        from orders o,evaluation e,user u        where  o.status!='已完结'        <if test="loancount==1">            and u.frequency=1        </if>        and u.id=e.user_id and e.id=o.evaluation_id        AND        #{startime} &lt;= o.gmt_datetime        and #{endtime} &gt; o.gmt_datetime        and  o.upt_datetime &gt;= #{deadline} and o.upt_datetime &lt; #{deadlineend}    </select>    <!--查询按时还款笔数or金额-->    <select id="HKBSORASHKJEORBL" resultType="java.util.Map">        select count(o.id) as "ASHKBS",        sum(e.evaluation_price) as "ANSHKJE"        from orders o,evaluation e,user u        where  o.status='已完结'        <if test="loancount==1">            and u.frequency=1        </if>        and u.id=e.user_id and e.id=o.evaluation_id        and        #{startime} &lt;= o.gmt_datetime        and #{endtime} &gt;  o.gmt_datetime        and o.upt_datetime &lt;  #{deadline}    </select>    <!--还款笔比-->    <select id="ASHKBCOUNT" resultType="java.util.Map">        select count(o.id) as "ASHKBSCOUNT"        from orders o,evaluation e,user u        where  o.status='已完结'        and u.id=e.user_id and e.id=o.evaluation_id        and        #{startime} &lt;= o.gmt_datetime        and #{endtime} &gt;  o.gmt_datetime        and o.upt_datetime &lt;  #{deadline}    </select>    <!--逾期三天 七天 三十天 -->    <select id="YQSANT" resultType="java.util.Map">        select count(o.id) as "YQST"        from orders o,evaluation e,user u        where  o.status!='已完结'        <if test="loancount==1">            and u.frequency=1        </if>        and u.id=e.user_id and o.evaluation_id=e.id        AND        #{startime} &lt;= o.gmt_datetime        and #{endtime} &gt;  o.gmt_datetime        and o.upt_datetime &gt; #{deadline}        and o.upt_datetime &lt; #{enddeadline}    </select>    <!--查询订单还款率报表-->    <select id="selectReport" parameterType="java.util.Map" resultType="com.rongke.model.OrderSum">        select        a.date as 'date',        coalesce(b.yhkdd,0) as 'ordersum', <!--应还订单量-->        coalesce(q.yhkje,0) as 'sum_qk',<!--应还订单金额-->        coalesce(c.newyhdd,0) as 'newordersum',<!--新应还订单-->        coalesce(p.newyhkje,0) as 'sum_new_qk',<!--新应还金额-->        coalesce(d.ashkbs,0) as 'amount',<!--按时还款笔数-->        coalesce(d.ashkje,0) as 'qk',<!--按时还款金额-->        coalesce(e.newashkbs,0) as 'new_amount',<!--新按时还款笔数-->        coalesce(e.newashkje,0) as 'new_qk',<!--新按时还款金额-->        coalesce(f.yqst,0) as 'stwhdsb',<!--逾期三天-->        coalesce(g.newyqst,0) as 'new_stwhdsb',<!--新逾期三天-->        coalesce(h.yqqt,0) as 'qtwhdsb',<!--逾期七天-->        coalesce(l.newyqqt,0) as 'new_qtwhdsb',<!--新逾期七天-->        coalesce(m.yqsst,0) as 'sstwhds',<!--逾期三十天-->        coalesce(n.newyqsst,0) as 'new_sstwhds',<!--新逾期三十天-->        coalesce(p.newordersum,0) as 'new_sum_amount',<!--新增订单总数newordersum-->        coalesce(q.ordersum,0) as 'sum_amount'<!--订单总数ordersum-->        from order_sum a        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'yhkdd'        from orders,evaluation,`user` WHERE orders.`status`!='已完结' and  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )b        on a.date = b.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'newyhdd'        from orders,evaluation,`user` WHERE orders.`status`!='已完结' and  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id and `orders`.hm_time=1 GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )c        on a.date = c.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'ashkbs',        sum(orders.money) as 'ashkje'        from orders,evaluation,`user` WHERE orders.`status`='已完结' and orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id        and  DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&gt;=-6  GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )d        on a.date = d.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'newashkbs',        sum(orders.money) as 'newashkje'        from orders,evaluation,`user` WHERE orders.`status`='已完结' and  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id and `orders`.hm_time=1        and  DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&gt;=-6  GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )e        on a.date = e.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'yqst'        from orders,evaluation,`user` WHERE orders.`status`='已完结' and  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id        and  DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&lt;-6 and DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))>-10  GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )f        on a.date = f.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'newyqst'        from orders,evaluation,`user` WHERE orders.`status`='已完结' and  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id and `orders`.hm_time=1        and  DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&lt;-6 and DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&gt;-10  GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )g        on a.date = g.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'yqqt'        from orders,evaluation,`user` WHERE orders.`status`='已完结' and  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id        and  DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&lt;-10 and DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&gt;-14  GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )h        on a.date = h.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'newyqqt'        from orders,evaluation,`user` WHERE orders.`status`='已完结' and  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id and `orders`.hm_time=1        and  DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&lt;-10 and DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&gt;-14  GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )l        on a.date = l.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'yqsst'        from orders,evaluation,`user` WHERE orders.`status`='已完结' and  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id        and  DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&lt;-13 and DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&gt;-37  GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )m        on a.date = m.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'newyqsst'        from orders,evaluation,`user` WHERE orders.`status`='已完结' and  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id and `orders`.hm_time=1        and  DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d')) &lt;-13 and DATEDIFF(DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d'),DATE_FORMAT(orders.upt_datetime,'%Y-%m-%d'))&gt;-37  GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )n        on a.date = n.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'newordersum',        sum(evaluation.evaluation_price) as 'newyhkje'        from orders,evaluation,`user` WHERE  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id and `orders`.hm_time=1 GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )p        on a.date = p.date        LEFT JOIN        (        select DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d')  as 'date',        count(orders.id) as 'ordersum',        sum(evaluation.evaluation_price) as 'yhkje'        from orders,evaluation,`user` WHERE  orders.evaluation_id=evaluation.id and evaluation.user_id=`user`.id GROUP BY DATE_FORMAT(orders.gmt_datetime,'%Y-%m-%d') order by date DESC        )q        on a.date = q.date        where 1=1        <if test="time1!=null and time1!='' and time2!=null and time2!=''">            and  a.date between #{time1} and #{time2}        </if>        order by a.date DESC        LIMIT #{pageNo},#{pageSize}    </select>    <select id="selectReportCount" parameterType="java.util.Map" resultType="java.lang.Integer">        select        count(a.id)        from order_sum a        where 1=1        <if test="time1!=null and time1!='' and time2!=null and time2!=''">            and  a.date between #{time1} and #{time2}        </if>    </select>    <select id="updateOther" parameterType="java.util.Map">        update orders  set upt_datetime=#{uptDatetime},`status`=#{status},contract_adress=#{contractAdress} where id=#{id}    </select>    <select id="updateDaikou" parameterType="java.util.Map">        update orders set daikou_status=#{daikouStatus} where id=#{id}    </select></mapper>