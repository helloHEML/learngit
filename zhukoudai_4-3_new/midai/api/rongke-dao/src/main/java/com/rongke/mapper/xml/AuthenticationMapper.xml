<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.rongke.mapper.AuthenticationMapper">    <resultMap type="com.rongke.model.Authentication" id="rmAuthentication">        <id property="id" column="id" />        <result property="userId" column="userId"/>        <result property="bankCardAuth" column="bankCardAuth"/>        <result property="phoneAddressBookAuth" column="phoneAddressBookAuth"/>        <result property="userBaseMsgAuth" column="userBaseMsgAuth"/>        <result property="status" column="status"/>        <result property="gmtDatetime" column="gmtDatetime"/>        <result property="uptDatetime" column="uptDatetime"/>    </resultMap>    <resultMap type="com.rongke.model.Authentication" id="mAuthentication">        <id property="id" column="authentication_id" />        <result property="userId" column="authentication_userId"/>        <result property="bankCardAuth" column="authentication_bankCardAuth"/>        <result property="phoneAddressBookAuth" column="authentication_phoneAddressBookAuth"/>        <result property="userBaseMsgAuth" column="authentication_userBaseMsgAuth"/>        <result property="status" column="authentication_status"/>        <result property="gmtDatetime" column="authentication_gmtDatetime"/>        <result property="uptDatetime" column="authentication_uptDatetime"/>        <result property="auditorId" column="authentication_auditorId"/>        <association property="auditor" javaType="com.rongke.model.Admin" >            <result property="loginName" column="admin_loginName"/>            <result property="name" column="admin_name"/>        </association>    </resultMap>    <sql id="mAuthenticationPkSql">        authentication.id AS authentication_id,        authentication.user_id AS authentication_userId,        authentication.bank_card_auth AS authentication_bankCardAuth,        authentication.phone_address_book_auth AS authentication_phoneAddressBookAuth,        authentication.user_base_msg_auth AS authentication_userBaseMsgAuth,        authentication.status AS authentication_status,        authentication.auditor_id AS authentication_auditorId,        authentication.gmt_datetime AS authentication_gmtDatetime,        authentication.upt_datetime AS authentication_uptDatetime    </sql>    <sql id="mAuthenticationSql">        id AS id,        user_id AS userId,        bank_card_auth AS bankCardAuth,        phone_address_book_auth AS phoneAddressBookAuth,        user_base_msg_auth AS userBaseMsgAuth,        status AS status,        gmt_datetime AS gmtDatetime,        upt_datetime AS uptDatetime    </sql>    <select id="selectByCondition" parameterType="Authentication" resultMap="rmAuthentication">    select    <include refid="mAuthenticationSql"></include>    from authentication    <where>        <if test="id!= null">            AND id=#{id}        </if>        <if test="userId!= null">            AND user_id=#{userId}        </if>        <if test="bankCardAuth!= null">            AND bank_card_auth=#{bankCardAuth}        </if>        <if test="phoneAddressBookAuth!= null">            AND phone_address_book_auth=#{phoneAddressBookAuth}        </if>        <if test="userBaseMsgAuth!= null">            AND user_base_msg_auth=#{userBaseMsgAuth}        </if>        <if test="status!= null">            AND status=#{status}        </if>        <if test="gmtDatetime!= null">            AND gmt_datetime=#{gmtDatetime}        </if>        <if test="uptDatetime!= null">            AND upt_datetime=#{uptDatetime}        </if>    </where>    </select>    <select id="selectPreviousAuditorId" resultType="java.lang.Integer">        SELECT authentication.auditor_id FROM `authentication` WHERE id=(SELECT MAX(id) FROM `authentication` WHERE auditor_id IS NOT NULL)    </select>     <select id="selectAuthenList"  resultMap="mAuthentication">         SELECT         <include refid="mAuthenticationPkSql"></include>         from authentication         WHERE         authentication.auditor_id is NULL         AND authentication.phone_record_auth=1     </select>    <select id="selectAuthenAdmiList" parameterType="java.lang.String" resultMap="mAuthentication">        SELECT        <include refid="mAuthenticationPkSql"></include>        ,        admin.login_name AS admin_loginName,        admin.name AS admin_name        FROM        authentication,admin        WHERE        authentication.auditor_id=admin.id        <if test="time1!= null and time1!=''">            AND datediff(authentication.assign_datetime,#{time1}) &gt;=0        </if>        <if test="time2!= null and time2!=''">            AND datediff(authentication.assign_datetime,#{time2}) &lt;=0        </if>    </select>    <select id="selectUserAuthenById" parameterType="java.lang.String" resultType="java.util.Map">        SELECT        user_base_msg.id AS userBaseMsg_id,        user_base_msg.user_id AS userBaseMsg_userId,        user_base_msg.marital_status AS userBaseMsg_maritalStatus,        user_base_msg.education AS userBaseMsg_education,        user_base_msg.address_id AS userBaseMsg_addressId,        user_base_msg.status AS userBaseMsg_status,        user_base_msg.auditor_id AS userBaseMsg_auditorId,        user_base_msg.gmt_datetime AS userBaseMsg_gmtDatetime,        user_base_msg.upt_datetime AS userBaseMsg_uptDatetime,        user.real_name AS user_realName,        user.phone AS user_phone,        address.province AS address_province,        address.city AS address_city,        address.area AS address_area,        user_contact.id AS user_contact_id,        user_contact.name AS user_contact_name,        user_contact.phone AS user_contact_phone,        user_contact.relation AS relation,        address.address_detail AS address_addressDetail,        bank_card.id AS bankCard_id,        bank_card.user_id AS bankCard_userId,        bank_card.id_card_no AS bankCard_idCardNo,        bank_card.bank_card_no AS bankCard_bankCardNo,        bank_card.status AS bankCard_status,        bank_card.phone AS bankCard_phone,        bank_card.name AS bankCard_name,        bank_card.bank_card_name AS bankCard_bankCardName,        bank_card.gmt_datetime AS bankCard_gmtDatetime,        user_identity.id AS userIdentity_id,        user_identity.user_id AS userIdentity_userId,        user_identity.identity_front AS userIdentity_identityFront,        user_identity.identity_back AS userIdentity_identityBack,        user_identity.face_url AS userIdentity_faceUrl,        user_identity.identity_num AS userIdentity_identityNum,        user_identity.user_name AS userIdentity_userName,        user_identity.status AS userIdentity_status,        user_identity.gmt_datetime AS userIdentity_gmtDatetime,        user_identity.upt_datetime AS userIdentity_uptDatetime,        user_taobao.name AS userTaobao_name,        user_taobao.gender AS userTaobao_gender,        user_taobao.mobile AS userTaobao_mobile,        user_taobao.nick_name AS userTaobao_nickName,        user_taobao.startus AS userTaobao_startus,        user_taobao.upt_datetime AS userTaobao_uptDatetime,        user_phone.id AS userPhone_id,        user_phone.user_id AS userPhone_userId,        user_phone.phone AS userPhone_phone,        user_phone.status AS userPhone_status,        user_phone.task_id AS userPhone_taskId,        user_phone.net_age AS userPhone_netAge,        user_phone.gmt_datetime AS userPhone_gmtDatetime,        user_phone.upt_datetime AS userPhone_uptDatetime        FROM        user,        user_base_msg,        address,        user_contact,        user_identity,        user_phone,        user_taobao,        bank_card        WHERE user_base_msg.user_id = user.id        AND user_contact.`user_id` = user_base_msg.user_id        AND user_base_msg.address_id = address.id        AND user_contact.emergency_contact = '紧急联系人'        AND user.id=user_identity.user_id        AND user.id=user_phone.user_id        AND user.id=bank_card.user_id        AND user.id=user_taobao.user_id        AND user_taobao.startus='使用'        <if test="userId!= null and userId!=''">            AND user.id=#{userId}        </if>        <!-- AND user.id=user_zm.user_id AND user_zm.status="使用"-->    </select>    <select id="authJoinUserCount" resultType="java.lang.Integer">        SELECT COUNT(user.id) FROM user JOIN authentication ON user.id = authentication.user_id        <where>            ${ew.sqlSegment}        </where>    </select></mapper>