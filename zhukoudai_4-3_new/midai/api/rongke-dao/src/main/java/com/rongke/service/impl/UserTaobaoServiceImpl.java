package com.rongke.service.impl;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.service.impl.ServiceImpl;import com.rongke.mapper.UserTaobaoMapper;import com.rongke.model.Authentication;import com.rongke.model.User;import com.rongke.model.UserPhone;import com.rongke.model.UserTaobao;import com.rongke.rediscluster.CacheUtil;import com.rongke.service.AuthenticationService;import com.rongke.service.UserService;import com.rongke.service.UserTaobaoService;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;import java.util.Map;/** * @UserTaobaoServiceImpl * @ServiceImpl * @version : Ver 1.0 */@Servicepublic class UserTaobaoServiceImpl extends ServiceImpl<UserTaobaoMapper, UserTaobao> implements UserTaobaoService {    private Logger log = Logger.getLogger(this.getClass());    @Autowired    private UserTaobaoMapper userTaobaoMapper;    @Autowired    private UserService userService;    @Autowired    private CacheUtil redisClusterCache;    @Autowired    private AuthenticationService authenticationService;    /**     * @根据条件查找     * @param userTaobao     * @return     */    @Override    public List<UserTaobao> selectByCondition(UserTaobao userTaobao) {        return userTaobaoMapper.selectByCondition(userTaobao);    }    @Override    public Integer selectPartCount(Map<String, Object> map) {        return userTaobaoMapper.selectPartCount(map);    }    @Override    public List<UserPhone> selectPartByPage(Map<String, Object> map) {        return userTaobaoMapper.selectPartByPage(map);    }    /**     * 如果5分钟后淘宝认证没有完成则重新认证     */    public void resetTaobao(){        User user = userService.selectCurrentUser();        Long userId = user.getId();        String key = "TB"+userId;        if(!redisClusterCache.hasKey(key)){            Authentication authentication = authenticationService.selectOne(new EntityWrapper<Authentication>().eq("user_id",userId).eq("taobao_auth","3"));            if(authentication != null){                authentication.setTaobaoAuth("0");// 正确//                authentication.setTaobaoAuth("1");//跳过淘宝认证                System.out.println("当淘宝认证为三的时候被重置了");                log.error("21+auth************userId:"+user.getId());                authenticationService.updateById(authentication);            }        }    }}