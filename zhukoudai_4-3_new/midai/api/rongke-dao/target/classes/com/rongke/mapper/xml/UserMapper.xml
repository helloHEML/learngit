<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.rongke.mapper.UserMapper">    <resultMap type="com.rongke.model.User" id="rmUser">        <id property="id" column="id" />        <result property="nickName" column="nickName"/>        <result property="realName" column="realName"/>        <result property="password" column="password"/>        <result property="phone" column="phone"/>        <result property="source" column="source"/>    </resultMap>    <resultMap type="com.rongke.model.User" id="mUser">        <id property="id" column="user_id" />        <result property="nickName" column="user_nickName"/>        <result property="realName" column="user_realName"/>        <result property="password" column="user_password"/>        <result property="status" column="user_status"/>        <result property="gmtDatetime" column="user_gmtDatetime"/>        <result property="uptDatetime" column="user_uptDatetime"/>        <result property="phone" column="user_phone"/>        <result property="source" column="user_source"/>        <result property="defriendReason" column="user_defriendReason"/>        <result property="authStatus" column="authStatus"/>    </resultMap>    <sql id="mUserPkSql">        user.id AS user_id,        user.nick_name AS user_nickName,        user.real_name AS user_realName,        user.password AS user_password,        user.status AS user_status,        user.gmt_Datetime AS user_gmtDatetime,        user.upt_Datetime AS user_uptDatetime,        user.phone AS user_phone,        user.source AS user_source,        user.defriend_reason AS user_defriendReason    </sql>    <sql id="mUserSql">        id AS id,        nick_name AS nickName,        real_name AS realName,        password AS password,        source AS source,        phone AS phone    </sql>    <select id="findUserDateList" parameterType="java.lang.String" resultMap="mUser">        SELECT        <include refid="mUserPkSql"></include>        ,        CASE        WHEN authentication.phone_record_auth=2        THEN '认证失败'        WHEN authentication.user_base_msg_auth=2        THEN '认证失败'        WHEN authentication.bank_card_auth=2        THEN '认证失败'        WHEN authentication.identity_auth=2        THEN '认证失败'        WHEN authentication.user_base_msg_auth=1        THEN '已认证'        ELSE '未认证'        END AS authStatus        FROM        user ,authentication        WHERE user.id=authentication.user_id        <choose>            <when test="authStatus!= null and authStatus=='认证成功'">                AND authentication.user_base_msg_auth = 1            </when>            <when test="authStatus!= null and authStatus=='未认证'">                AND authentication.phone_record_auth = 0            </when>            <when test="authStatus!= null and authStatus=='认证失败'">                AND   if(authentication.phone_record_auth = 2,authentication.phone_record_auth = 2,authentication.user_base_msg_auth = 2)            </when>        </choose>        <choose>            <when test="source=='tg0001'">                AND locate('tg',user.source)>0            </when>            <when test="source=='xbt601'">                AND locate('xbt',user.source)>0            </when>            <when test="source!=null and source!=''">                AND user.source=#{source}            </when>        </choose>        <if test="phone!= null and phone!=''">            AND user.phone like concat('%',#{phone},'%')        </if>        <if test="time1!= null and time1!=''">            AND datediff(user.gmt_datetime,#{time1}) &gt;=0        </if>        <if test="time2!= null and time2!=''">            AND datediff(user.gmt_datetime,#{time2}) &lt;=0        </if>        <if test="userName!= null and userName!=''">            AND user.real_name like concat('%',#{userName},'%')        </if>        ORDER BY user.gmt_datetime DESC        <if test="_parameter.containsKey('startIndex')">            limit ${startIndex},${size}        </if>    </select>    <select id="findUserDateListSize" parameterType="java.lang.String" resultType="java.lang.Integer">        SELECT        COUNT(*)        FROM        user ,authentication        WHERE user.id=authentication.user_id        <choose>            <when test="authStatus!= null and authStatus=='认证成功'">                AND authentication.phone_record_auth = 1                AND authentication.user_base_msg_auth = 1            </when>            <when test="authStatus!= null and authStatus=='认证失败'">                AND if(authentication.phone_record_auth = 2,authentication.phone_record_auth = 2,authentication.user_base_msg_auth = 2)            </when>            <when test="authStatus!= null and authStatus=='未认证'">                AND authentication.phone_record_auth = 0            </when>        </choose>        <choose>            <when test="source=='tg0001'">                AND locate('tg',user.source)>0            </when>            <when test="source=='xbt601'">                AND locate('xbt',user.source)>0            </when>            <when test="source!=null and source!=''">                AND user.source=#{source}            </when>        </choose>        <if test="phone!= null and phone!=''">            AND user.phone like concat('%',#{phone},'%')        </if>        <if test="userName!= null and userName!=''">            AND user.real_name like concat('%',#{userName},'%')        </if>        <if test="time1!= null and time1!=''">            AND datediff(user.gmt_datetime,#{time1}) &gt;=0        </if>        <if test="time2!= null and time2!=''">            AND datediff(user.gmt_datetime,#{time2}) &lt;=0        </if>    </select>    <select id="findChannelUserList" resultType="java.lang.String" resultMap="mUser">        SELECT        user.id AS user_id,        user.source AS user_source,        a.status AS user_status,        CASE        WHEN authentication.phone_record_auth=2        THEN '认证失败'        WHEN authentication.user_base_msg_auth=2        THEN '认证失败'        WHEN authentication.bank_card_auth=2        THEN '认证失败'        WHEN authentication.identity_auth=2        THEN '认证失败'        WHEN authentication.user_base_msg_auth=1        THEN '认证成功'        WHEN authentication.user_base_msg_auth=3        THEN '已认证'        ELSE '未认证'        END AS authStatus        FROM        user LEFT JOIN (SELECT user_id,STATUS FROM evaluation WHERE batch_no IS NOT NULL   GROUP BY user_id  HAVING COUNT(user_id)=1)a ON user.id=a.user_id,authentication        WHERE user.id=authentication.user_id        AND user.source is not null        <choose>            <when test="source=='tg0001'">                AND locate('tg',user.source)>0            </when>            <when test="source=='xbt601'">                AND locate('xbt',user.source)>0            </when>            <when test="source!=null and source!=''">                AND user.source=#{source}            </when>        </choose>        <if test="time1!= null and time1!=''">            AND datediff(user.gmt_datetime,#{time1}) &gt;=0        </if>        <if test="time2!= null and time2!=''">            AND datediff(user.gmt_datetime,#{time2}) &lt;=0        </if>        ORDER BY user.source    </select>    <select id="userORChaORAuto" resultType="java.util.Map">        SELECT * FROM user        <where>            ${ew.sqlSegment}        </where>    </select>    <select id="userPage" resultType="com.rongke.model.User">        select  u.id,u.nick_name nickName,u.real_name realName,u.password,u.phone,c.name as source,u.token,u.dev_alias devAlias,u.defriend_reason defriendReason,u.status,        u.refuse_reason refuseReason,u.gmt_datetime gmtDatetime,u.upt_datetime uptDatetime,u.contentment_money contentmentMoney,u.bank_default bankDefault,u.review_id reviewId,        (case  when a.bank_card_auth=0 and a.phone_address_book_auth=0 and a.user_base_msg_auth=0 and a.phone_record_auth=0 and a.identity_auth=0 and a.taobao_auth=0        then '未认证'        when a.bank_card_auth=1 and a.phone_address_book_auth=1 and a.user_base_msg_auth=1 and a.phone_record_auth=1 and a.identity_auth=1 and a.taobao_auth=1        then '已认证'        when a.bank_card_auth=2 or a.phone_address_book_auth=2 or a.user_base_msg_auth=2 or a.phone_record_auth=2 or a.identity_auth=2 or a.taobao_auth=2        then '认证失败'        else '认证中'        end) as authStatus,        a.marks as 'amarks'        from user u LEFT JOIN authentication a on u.id = a.user_id LEFT JOIN channel c on u.source = c.id        <where>            ${ew.sqlSegment}        </where>        ORDER BY u.gmt_datetime DESC    </select></mapper>