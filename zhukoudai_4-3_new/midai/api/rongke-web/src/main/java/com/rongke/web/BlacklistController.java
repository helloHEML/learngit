package com.rongke.web;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.plugins.Page;import com.rongke.commons.JsonResp;import com.rongke.model.Blacklist;import com.rongke.service.BlacklistService;import com.rongke.web.common.ReadExcel;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import org.springframework.web.multipart.MultipartFile;import javax.servlet.http.HttpServletResponse;import java.util.List;/** * @BlacklistController * @黑名单库Controller * @version : Ver 1.0 */@RestController@RequestMapping(value="/api/blacklist")@Transactional@CrossOriginpublic class BlacklistController {    private Logger log = Logger.getLogger(this.getClass());    @Autowired    private BlacklistService blacklistService;    /**     * @添加黑名单库     * @param blacklist     * @return 返回值JsonResp     */    @RequestMapping(value="/add", method = RequestMethod.POST)    public JsonResp addBlacklist(@RequestBody Blacklist blacklist){        log.debug("添加黑名单库");        blacklistService.insert(blacklist);        return JsonResp.ok(blacklist);    }    /**     * @修改黑名单库     * @param blacklist     * @return 返回值JsonResp     */    @RequestMapping(value="/update", method = RequestMethod.POST)    public JsonResp updateBlacklist(@RequestBody Blacklist blacklist){        log.debug("修改黑名单库");        blacklistService.updateById(blacklist);        return JsonResp.ok(blacklist);    }    /**     * @根据id查找黑名单库     * @param id     * @return 返回值JsonResp     */    @RequestMapping(value="/selectOne", method = RequestMethod.GET)    public JsonResp selectBlacklist(Long id){        log.debug("查找黑名单库");        Blacklist blacklist = blacklistService.selectById(id);        return JsonResp.ok(blacklist);    }    /**     * @查找     * @param     * @return 返回值JsonResp     */    @RequestMapping(value="/selectByPage", method = RequestMethod.GET)    public JsonResp selectByPage(Integer currentPage){        log.debug("查找黑名单库");        EntityWrapper<Blacklist> wrapper = new EntityWrapper<>();        Page page = new Page();        page.setSize(10);        page.setCurrent(currentPage);        Page blacklist = blacklistService.selectPage(page,wrapper);        return JsonResp.ok(blacklist);    }    /**     * @param file 文件     * @excle导入     */    @RequestMapping(value = "/excleToMysql", method = RequestMethod.POST)    public JsonResp excleToMysql(@RequestParam(value = "file", required = false) MultipartFile file, HttpServletResponse response)            throws Exception {        if(file==null){            return JsonResp.fa("数据不能为空");        }        //创建处理EXCEL的类        ReadExcel readExcel=new ReadExcel();        //解析excel，获取上传的事件单        List<Blacklist> uploadBlacklist = readExcel.getExcelInfo(file);        //至此已经将excel中的数据转换到list里面了,接下来就可以操作list,可以进行保存到数据库,或者其他操作,        if(uploadBlacklist != null && !uploadBlacklist.isEmpty()){            blacklistService.insertBatch(uploadBlacklist);            response.sendRedirect("http://127.0.0.1:8020/baitu_admin/blackList.html");            return JsonResp.ok("导入成功");        }else{            return JsonResp.ok("导入失败");        }    }}