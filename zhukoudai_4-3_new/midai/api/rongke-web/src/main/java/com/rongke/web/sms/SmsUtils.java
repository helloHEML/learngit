package com.rongke.web.sms;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONObject;import com.rongke.rediscluster.CacheUtil;import com.rongke.utils.ConstantFactory;import com.rongke.utils.ans.R;import com.rongke.web.ans.config.SysReader;import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;import org.apache.commons.httpclient.HttpClient;import org.apache.commons.httpclient.NameValuePair;import org.apache.commons.httpclient.methods.PostMethod;import org.apache.commons.httpclient.params.HttpMethodParams;import org.apache.commons.lang3.StringUtils;import org.springframework.stereotype.Component;import javax.annotation.Resource;import java.io.IOException;import java.net.URLEncoder;/** * Created by bilibili on 2017/8/30. */@Componentpublic class SmsUtils {    private final String accesskey= ConstantFactory.getConfig().getSmsAccessKey();//用户开发key    private final String accessSecret= ConstantFactory.getConfig().getSmsSecret();//用户开发秘钥    private final String sign= ConstantFactory.getConfig().getSmsSignId();//用户签名    @Resource    private CacheUtil redisClusterCache;    //普通短信    //发送验证码    public Boolean sendsms(String mobile,String content) throws Exception {        boolean sendsucce=false;        HttpClient httpClient = new HttpClient();        PostMethod postMethod = null;        if(StringUtils.isEmpty(mobile)&&mobile.indexOf(",")!=-1){            postMethod = new PostMethod("http://api.1cloudsp.com/api/v2/send");        }else{            postMethod = new PostMethod("http://api.1cloudsp.com/api/v2/single_send");        }        postMethod.getParams().setContentCharset("UTF-8");        postMethod.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,new DefaultHttpMethodRetryHandler());        NameValuePair[] data = {                new NameValuePair("accesskey", accesskey),                new NameValuePair("secret", accessSecret),                new NameValuePair("sign", sign),                new NameValuePair("templateId", ConstantFactory.getConfig().getSmsCodeId()),                new NameValuePair("mobile", mobile),                new NameValuePair("content", URLEncoder.encode(content, "utf-8"))//（示例模板：{1}您好，您的订单于{2}已通过{3}发货，运单号{4}）        };        postMethod.setRequestBody(data);        System.out.println(URLEncoder.encode(content, "utf-8"));        int statusCode = httpClient.executeMethod(postMethod);        System.out.println("statusCode: " + statusCode + ", body: "                + postMethod.getResponseBodyAsString());        if(statusCode==200){            sendsucce=true;        }        return sendsucce;    }    //普通短信    public R sendsms2(String mobile, String content) throws Exception {        boolean sendsucce=false;        HttpClient httpClient = new HttpClient();        PostMethod postMethod = null;        if(StringUtils.isEmpty(mobile)&&mobile.indexOf(",")!=-1){            postMethod = new PostMethod("http://api.1cloudsp.com/api/v2/send");        }else{            postMethod = new PostMethod("http://api.1cloudsp.com/api/v2/single_send");        }        postMethod.getParams().setContentCharset("UTF-8");        postMethod.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,new DefaultHttpMethodRetryHandler());        NameValuePair[] data = {                new NameValuePair("accesskey", accesskey),                new NameValuePair("secret", accessSecret),                new NameValuePair("sign", sign),                new NameValuePair("templateId", ConstantFactory.getConfig().getSmsCodeId()),                new NameValuePair("mobile", mobile),                new NameValuePair("content", URLEncoder.encode(content, "utf-8"))//（示例模板：{1}您好，您的订单于{2}已通过{3}发货，运单号{4}）        };        postMethod.setRequestBody(data);        int statusCode = httpClient.executeMethod(postMethod);        System.out.println("statusCode: " + statusCode + ", body: "                + postMethod.getResponseBodyAsString());        if(statusCode==200){            JSONObject json = JSON.parseObject(postMethod.getResponseBodyAsString());            if(json.getIntValue("code")==0){                return R.ok();            }else{                return R.error(json.getString("msg"));            }        }else{            return R.error(postMethod.getResponseBodyAsString());        }    }    /**     *     * @param mobile        手机号     * @param content       发送内容     * @param templateId    短信模板     * @return     * @throws Exception     */    //普通短信自定义    public Boolean sendsms(String mobile,String content,String templateId) throws Exception {        boolean sendsucce=false;        HttpClient httpClient = new HttpClient();        PostMethod postMethod = null;        if(StringUtils.isNotBlank(mobile)&&mobile.indexOf(",")!=-1){            postMethod = new PostMethod("http://api.1cloudsp.com/api/v2/send");         //群发        }else{            postMethod = new PostMethod("http://api.1cloudsp.com/api/v2/single_send");  //单发        }        postMethod.getParams().setContentCharset("UTF-8");        postMethod.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,new DefaultHttpMethodRetryHandler());        NameValuePair[] data = {                new NameValuePair("accesskey", accesskey),                new NameValuePair("secret", accessSecret),                new NameValuePair("sign", sign),                new NameValuePair("templateId",templateId),                new NameValuePair("mobile", mobile),                new NameValuePair("content", URLEncoder.encode(content, "utf-8"))//（示例模板：{1}您好，您的订单于{2}已通过{3}发货，运单号{4}）        };        postMethod.setRequestBody(data);        System.out.println(URLEncoder.encode(content, "utf-8"));        int statusCode = httpClient.executeMethod(postMethod);        System.out.println("statusCode: " + statusCode + ", body: "                + postMethod.getResponseBodyAsString());        if(statusCode==200){            sendsucce=true;        }        return sendsucce;    }    //no use    public Boolean sendsmsSalt(String phone, String content, String templateId, String sign) throws Exception {        boolean sendsucce=false;        HttpClient httpClient = new HttpClient();        PostMethod postMethod = null;        if(StringUtils.isNotBlank(phone)&&phone.indexOf(",")!=-1){            postMethod = new PostMethod("http://api.1cloudsp.com/api/v2/send");         //群发        }else{            postMethod = new PostMethod("http://api.1cloudsp.com/api/v2/single_send");  //单发        }        postMethod.getParams().setContentCharset("UTF-8");        postMethod.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,new DefaultHttpMethodRetryHandler());        NameValuePair[] data = {                new NameValuePair("accesskey", accesskey),                new NameValuePair("secret", accessSecret),                new NameValuePair("sign", sign),                new NameValuePair("templateId",templateId),                new NameValuePair("mobile",phone),                new NameValuePair("content", URLEncoder.encode(content, "utf-8"))//（示例模板：{1}您好，您的订单于{2}已通过{3}发货，运单号{4}）        };        postMethod.setRequestBody(data);        System.out.println(URLEncoder.encode(content, "utf-8"));        int statusCode = httpClient.executeMethod(postMethod);        System.out.println("statusCode: " + statusCode + ",body: "                + postMethod.getResponseBodyAsString());        if(statusCode==200){            sendsucce=true;        }        return sendsucce;    }    public Boolean checkCode(String phone, String code) {        Boolean check = false;        if(redisClusterCache.hasKey(phone)){            try {                String cachecode=redisClusterCache.getCache(phone);                if(cachecode.equals(code)){                    check=true;                }            } catch (Exception e) {                e.printStackTrace();            }        }        return check;    }    /**     * 剩余短信     */    public JSONObject smsBalance() {        HttpClient httpClient = new HttpClient();        PostMethod postMethod = new PostMethod("http://api.1cloudsp.com/query/account");        postMethod.getParams().setContentCharset("UTF-8");        postMethod.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,                new DefaultHttpMethodRetryHandler());        NameValuePair[] data = {                new NameValuePair("accesskey", accesskey),                new NameValuePair("secret", accessSecret)        };        postMethod.setRequestBody(data);        postMethod.setRequestHeader("Connection", "close");        int statusCode = 0;        JSONObject json = null;        try {            statusCode = httpClient.executeMethod(postMethod);            System.out.println("statusCode: " + statusCode);            json = JSON.parseObject(postMethod.getResponseBodyAsString());        } catch (IOException e) {            e.printStackTrace();        }        return json;    }    public static void main(String[] args) throws Exception {        SmsUtils s  = new SmsUtils();    }}