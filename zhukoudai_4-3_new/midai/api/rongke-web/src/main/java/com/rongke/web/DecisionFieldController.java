package com.rongke.web;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.rongke.commons.JsonResp;import com.rongke.model.DecisionField;import com.rongke.model.DecisionTableExplain;import com.rongke.service.DecisionFieldService;import com.rongke.service.DecisionTableExplainService;import com.rongke.utils.ans.PageUtils;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import java.util.ArrayList;import java.util.List;import java.util.Map;/** * @UserPhoneController * @Controller * @version : Ver 1.0 * 字段 */@RestController@RequestMapping(value="/api/decisionField")@Transactional@CrossOriginpublic class DecisionFieldController {    private Logger log = Logger.getLogger(this.getClass());    @Autowired    private DecisionFieldService decisionFieldService;    @Autowired    private DecisionTableExplainService decisionTableExplainService;    @RequestMapping(value="/add", method = RequestMethod.POST)    public JsonResp addDecisionRule(@RequestBody DecisionField decisionField){        log.debug("添加");        decisionFieldService.insert(decisionField);        return JsonResp.ok(decisionField);    }    @RequestMapping(value="/update", method = RequestMethod.POST)    public JsonResp updateDecisionRule(@RequestBody DecisionField decisionField){        log.debug("修改");        decisionFieldService.updateById(decisionField);        return JsonResp.ok(decisionField);    }    @RequestMapping(value="/getPages", method = RequestMethod.GET)    public PageUtils getPages(@RequestParam Map<String,Object> params){        return decisionFieldService.getPages(params);    }    /**删除*/    @RequestMapping(value="/deleteById", method = RequestMethod.GET)    public JsonResp deleteById(Long id){        log.debug("delete");        decisionFieldService.deleteById(id);        return JsonResp.ok();    }    /**显示修改页面*/    @RequestMapping(value = "/info/{id}",method = RequestMethod.GET)    public JsonResp thisInfo(@PathVariable("id") String id){        DecisionField decisionField = decisionFieldService.selectById(id);        return JsonResp.ok(decisionField);    }    /**不分页显示*/    @RequestMapping(value="/select", method = RequestMethod.GET)    public JsonResp select(){        log.debug("select");        List<DecisionField> decisionFieldList =  decisionFieldService.selectList(new EntityWrapper<DecisionField>());        return JsonResp.ok(decisionFieldList);    }    /** 显示字段说明表中的字段类型 */    @RequestMapping(value="/addSelectType", method = RequestMethod.GET)    public JsonResp addSelectType(){        log.debug("selectType");        List<DecisionTableExplain> decisionTableExplainList =                decisionTableExplainService.selectList(new EntityWrapper<DecisionTableExplain>().eq("table_type","FK_data"));        return JsonResp.ok(decisionTableExplainList);    }    @RequestMapping(value="/addSelectTypeChinaName", method = RequestMethod.GET)    public JsonResp addSelectTypeChinaName(String type){        log.debug("selectType");        List list = new ArrayList();        List<DecisionTableExplain> decisionTableExplainList =                decisionTableExplainService.selectList(new EntityWrapper<DecisionTableExplain>().like("china_name",type));        for (DecisionTableExplain decisionTableExplain: decisionTableExplainList) {            list.add(decisionTableExplain.getChinaName().replace(type,""));        }        return JsonResp.ok(list);    }}