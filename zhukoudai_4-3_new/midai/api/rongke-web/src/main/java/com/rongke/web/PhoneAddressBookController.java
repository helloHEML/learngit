package com.rongke.web;import com.rongke.commons.JsonResp;import com.rongke.mapper.PhoneAddressBookMapper;import com.rongke.model.PhoneAddressBook;import com.rongke.service.PhoneAddressBookService;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import java.math.BigInteger;import java.util.Date;import java.util.List;/** * @PhoneAddressBookController * @手机通讯录Controller * @version : Ver 1.0 */@RestController@RequestMapping(value="/api/phoneAddressBook")@Transactional@CrossOriginpublic class PhoneAddressBookController {    private Logger log = Logger.getLogger(this.getClass());    @Autowired    private PhoneAddressBookService phoneAddressBookService;    /**     * @添加手机通讯录     * @param phoneAddressBook     * @return 返回值JsonResp     */    @RequestMapping(value="/add", method = RequestMethod.POST)    public JsonResp addPhoneAddressBook(@RequestBody PhoneAddressBook phoneAddressBook){        log.debug("添加手机通讯录");        phoneAddressBook.setGmtDatetime(new Date());        phoneAddressBookService.insert(phoneAddressBook);        return JsonResp.ok(phoneAddressBook);    }    /**     * @修改手机通讯录     * @param phoneAddressBook     * @return 返回值JsonResp     */    @RequestMapping(value="/update", method = RequestMethod.POST)    public JsonResp updatePhoneAddressBook(@RequestBody PhoneAddressBook phoneAddressBook){        log.debug("修改手机通讯录");        phoneAddressBook.setUptDatetime(new Date());        phoneAddressBookService.updateById(phoneAddressBook);        return JsonResp.ok(phoneAddressBook);    }    /**     * @根据id查找手机通讯录     * @param id     * @return 返回值JsonResp     */    @RequestMapping(value="/selectOne", method = RequestMethod.GET)    public JsonResp selectPhoneAddressBook(Long id){        log.debug("查找手机通讯录");        PhoneAddressBook phoneAddressBook = phoneAddressBookService.selectById(id);        return JsonResp.ok(phoneAddressBook);    }    /**     * @根据条件查找手机通讯录     * @param phoneAddressBook     * @return 返回值JsonResp     */    @RequestMapping(value = "/selectByCondition", method = RequestMethod.POST)    public JsonResp selectPhoneAddressBookByCondition(@RequestBody PhoneAddressBook phoneAddressBook){        log.debug("根据条件查找手机通讯录");        if(phoneAddressBook==null)            return JsonResp.toFail("参数不能为空");        List<PhoneAddressBook> phoneAddressBookList=phoneAddressBookService.selectByCondition(phoneAddressBook);        return JsonResp.ok(phoneAddressBookList);    }}