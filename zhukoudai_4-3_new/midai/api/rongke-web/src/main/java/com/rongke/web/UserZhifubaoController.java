package com.rongke.web;import com.rongke.commons.JsonResp;import com.rongke.commons.PageDto;import com.rongke.enums.StatusEnum;import com.rongke.model.Admin;import com.rongke.model.AdminRole;import com.rongke.model.UserPhone;import com.rongke.model.UserZhifubao;import com.rongke.service.AdminRoleService;import com.rongke.service.AdminService;import com.rongke.service.AuthenticationService;import com.rongke.service.UserZhifubaoService;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.concurrent.locks.Lock;import java.util.concurrent.locks.ReentrantLock;/** * @UserZhifubaoController * @Controller * @version : Ver 1.0 */@RestController@RequestMapping(value="/api/userZhifubao")@Transactional@CrossOriginpublic class UserZhifubaoController {    private Logger log = Logger.getLogger(this.getClass());    @Autowired    private UserZhifubaoService userZhifubaoService;    @Autowired    private AdminRoleService adminRoleService;    @Autowired    private AdminService adminService;    @Autowired    private AuthenticationService authenticationService;    private Lock lock = new ReentrantLock();    /**     * @添加     * @param userId     * @return 返回值JsonResp     */    @RequestMapping(value="/add", method = RequestMethod.GET)    public JsonResp addUserZhifubao(Long userId,String taskId){        log.debug("添加");        UserZhifubao userZhifubao = new UserZhifubao();        userZhifubao.setUserId(userId);        userZhifubao.setTaskId(taskId);        userZhifubao.setGmtDatetime(new Date());        userZhifubaoService.insert(userZhifubao);        return JsonResp.ok();    }    /**     * @修改     * @param userZhifubao     * @return 返回值JsonResp     */    @RequestMapping(value="/update", method = RequestMethod.POST)    public JsonResp updateUserZhifubao(@RequestBody UserZhifubao userZhifubao){        log.debug("修改");        userZhifubaoService.updateById(userZhifubao);        return JsonResp.ok(userZhifubao);    }    /**     * @根据id查找     * @param id     * @return 返回值JsonResp     */    @RequestMapping(value="/selectOne", method = RequestMethod.GET)    public JsonResp selectUserZhifubao(Long id){        log.debug("查找");        UserZhifubao userZhifubao = userZhifubaoService.selectById(id);        return JsonResp.ok(userZhifubao);    }    /**     * @分页查询手机认证     * @param     * @return 返回值JsonResp     */    @RequestMapping(value="/findByPage", method = RequestMethod.GET)    public JsonResp findByPage(Integer pageNo, Integer pageSize,String phone,String realName,String time){        log.debug("分页查询手机认证");        Admin admin=adminService.findLoginUser();        AdminRole adminRole=adminRoleService.selectById(admin.getAdminRoleId());        Map<String,Object> map = new HashMap<>();        map.put("pageNo",(pageNo-1)*pageSize);        map.put("pageSize",pageSize);        map.put("phone",phone);        map.put("realName",realName);        map.put("status", StatusEnum.USED.getTypeName());        String time1="",time2="";        if(time!=null && !"".equals(time)){            String[] array = time.split("~");            time1 = array[0];            time2 = array[1];        }        map.put("time1",time1);        map.put("time2",time2);        Integer count = null;        List<UserPhone> list = null;        if(adminRole!=null && adminRole.getType()==1) {//如果是审核员角色则根据角色来查询数据            map.put("adminId",admin.getId());        }        count= userZhifubaoService.selectPartCount(map);        list=userZhifubaoService.selectPartByPage(map);        PageDto page=new PageDto(pageNo,pageSize,list,count);        Map responsemap=new HashMap();        responsemap.put("page",page);        responsemap.put("roleType",adminRole.getType());        return JsonResp.ok(responsemap);    }}