package com.rongke.web;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.rongke.commons.JsonResp;import com.rongke.enums.StatusEnum;import com.rongke.model.ParamSetting;import com.rongke.service.ParamSettingService;import com.rongke.utils.ans.R;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import java.math.BigDecimal;/** * @ParamSettingController * @Controller * @version : Ver 1.0 */@RestController@RequestMapping(value="/api/paramSetting")@Transactional@CrossOriginpublic class ParamSettingController {    private Logger log = Logger.getLogger(this.getClass());    @Autowired    private ParamSettingService paramSettingService;    /**     * @添加     * @param paramSetting     * @return 返回值JsonResp     */    @RequestMapping(value="/add", method = RequestMethod.POST)    public JsonResp addParamSetting(@RequestBody ParamSetting paramSetting){        log.debug("添加");        paramSettingService.insert(paramSetting);        return JsonResp.ok(paramSetting);    }    /**     * @修改     * @param paramSetting     * @return 返回值JsonResp     */    @RequestMapping(value="/update", method = RequestMethod.POST)    public JsonResp updateParamSetting(@RequestBody ParamSetting paramSetting){        log.debug("修改");        paramSettingService.updateById(paramSetting);        return JsonResp.ok(paramSetting);    }    /**     * @根据id查找     * @param id     * @return 返回值JsonResp     */    @RequestMapping(value="/selectOne", method = RequestMethod.GET)    public JsonResp selectParamSetting(Long id){        log.debug("查找");        ParamSetting paramSetting = paramSettingService.selectById(id);        return JsonResp.ok(paramSetting);    }    /**     * 获得当前使用的内容     */    @RequestMapping("/getParamSetting")    public R getParamSetting(){        ParamSetting paramSetting = paramSettingService.selectOne(new EntityWrapper<ParamSetting>()                .eq("status", StatusEnum.USED.getTypeName())        );        return R.ok().put("data",paramSetting);    }    /**     * 添加     */    @RequestMapping("/Aadd")    public R Aadd(@RequestBody ParamSetting paramSetting){        if(paramSetting.getId()!=null){            ParamSetting paramSetting1 = paramSettingService.selectById(paramSetting.getId());            paramSetting1.setStatus(StatusEnum.UNUSED.getTypeName());            paramSettingService.updateById(paramSetting1);        }        paramSetting.setCashPledge("0");        int i = new BigDecimal(paramSetting.getOvertimeMoney()).compareTo(new BigDecimal(paramSetting.getRentDayMoney()));        if(i!=1){            return R.error("逾期费不得小于日租金");        }        paramSetting.setId(null);        paramSettingService.insert(paramSetting);        return R.ok().put("data",paramSetting);    }}