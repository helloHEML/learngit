package com.rongke.web;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.plugins.Page;import com.rongke.commons.JsonResp;import com.rongke.enums.DisableStatus;import com.rongke.model.DecisionRule;import com.rongke.service.DecisionRuleService;import com.rongke.utils.ans.PageUtils;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import java.util.List;import java.util.Map;/** * @UserPhoneController * @Controller * @version : Ver 1.0 */@RestController@RequestMapping(value="/api/decisionRule")@Transactional@CrossOriginpublic class DecisionRuleController {    private Logger log = Logger.getLogger(this.getClass());    @Autowired    private DecisionRuleService decisionRuleService;    @RequestMapping(value="/add", method = RequestMethod.POST)    public JsonResp addDecisionRule(@RequestBody DecisionRule decisionRule){        log.debug("添加");        decisionRule.setIsUse(DisableStatus.USER.getType());        decisionRuleService.insert(decisionRule);        return JsonResp.ok(decisionRule);    }    @RequestMapping(value="/update", method = RequestMethod.POST)    public JsonResp updateDecisionRule(@RequestBody DecisionRule decisionRule){        log.debug("修改");        decisionRuleService.updateById(decisionRule);        return JsonResp.ok(decisionRule);    }    /** 删除 */    @RequestMapping(value="/deleteById", method = RequestMethod.GET)    public JsonResp deleteById(Long id){        log.debug("delete");        decisionRuleService.deleteById(id);        return JsonResp.ok();    }    @RequestMapping(value="/selectBySetIdIsUse", method = RequestMethod.GET)    public JsonResp selectBySetIdIsUse(Long ruleSetId){        List<DecisionRule> decisionRuleList =  decisionRuleService.getDecisionRules(ruleSetId);        return JsonResp.ok(decisionRuleList);    }    /** 显示数据库里面所有的数据 */    @RequestMapping(value="/selectBySetId", method = RequestMethod.GET)    public JsonResp selectBySetId(Long ruleSetId){        List<DecisionRule> decisionRuleList =  decisionRuleService.getDecisionRulesBySetId(ruleSetId);        return JsonResp.ok(decisionRuleList);    }    @RequestMapping(value="/getPages", method = RequestMethod.GET)    public PageUtils getPages(@RequestParam Map<String,Object> params){        return decisionRuleService.getPages(params);    }    /** 显示修改的信息 */    @RequestMapping(value="/info/{id}",method = RequestMethod.GET)    public JsonResp showInfo(@PathVariable("id") String id){        EntityWrapper<DecisionRule> ew=new EntityWrapper<>();        ew.eq("id",id);        DecisionRule decisionRule= decisionRuleService.selectOne(ew);        return JsonResp.ok(decisionRule);    }    /** 启用/禁用*/    @RequestMapping(value = "/disable",method = RequestMethod.GET)    public JsonResp disable(Integer id){        DecisionRule decisionRule = decisionRuleService.selectById(id);        if(decisionRule.getIsUse() == DisableStatus.USER.getType()){            decisionRule.setIsUse(DisableStatus.NOT_USER.getType());        }else if(decisionRule.getIsUse() == DisableStatus.NOT_USER.getType()){            decisionRule.setIsUse(DisableStatus.USER.getType());        }        decisionRuleService.updateById(decisionRule);        return JsonResp.ok();    }}