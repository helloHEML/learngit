package com.rongke.web;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.rongke.commons.JsonResp;import com.rongke.model.Authentication;import com.rongke.model.User;import com.rongke.service.AuthenticationService;import com.rongke.service.UserService;import com.rongke.utils.ans.R;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;/** * @AuthenticationController * @用户认证Controller * @version : Ver 1.0 */@RestController@RequestMapping(value="/api/authentication")@Transactional@CrossOriginpublic class AuthenticationController {    private Logger log = Logger.getLogger(this.getClass());    @Autowired    private AuthenticationService authenticationService;    @Autowired    private UserService userService;    /**     * @添加用户认证     * @param authentication     * @return 返回值JsonResp     */    @RequestMapping(value="/add", method = RequestMethod.POST)    public JsonResp addAuthentication(@RequestBody Authentication authentication){        log.debug("添加用户认证");        authentication.setGmtDatetime(new Date());        authenticationService.insert(authentication);        return JsonResp.ok(authentication);    }    /**     * @修改用户认证     * @param authentication     * @return 返回值JsonResp     */    @RequestMapping(value="/update", method = RequestMethod.POST)    public JsonResp updateAuthentication(@RequestBody Authentication authentication){        log.debug("修改用户认证");        authentication.setUptDatetime(new Date());        authenticationService.updateById(authentication);        return JsonResp.ok(authentication);    }    /**     * @根据id查找用户认证     * @param id     * @return 返回值JsonResp     */    @RequestMapping(value="/selectOne", method = RequestMethod.GET)    public JsonResp selectAuthentication(Long id){        log.debug("查找用户认证");        Authentication authentication = authenticationService.selectById(id);        return JsonResp.ok(authentication);    }    /**     * @根据id查找用户认证     * @param     * @return 返回值JsonResp     */    @RequestMapping(value="/selectMyAuthentication", method = RequestMethod.GET)    public JsonResp selectMyAuthentication(){        log.debug("查找我的用户认证");        User user = userService.selectCurrentUser();        EntityWrapper<Authentication> wrapper = new EntityWrapper<>();        wrapper.eq("user_id",user.getId());        Authentication authentication = authenticationService.selectOne(wrapper);        return JsonResp.ok(authentication);    }    /**     * @根据id查找用户各项认证     * @param     * @return 返回值JsonResp     */    @RequestMapping(value="/selectUserAuthen", method = RequestMethod.GET)    public JsonResp selectUserAuthen(Long userId){        log.debug("根据id查找用户各项认证");        Map map=new HashMap();        map.put("userId",userId);        List<Map> maps=authenticationService.selectUserAuthenById(map);        Map data=new HashMap();        Map userBaseMap=new HashMap();        Map userIdentityMap=new HashMap();        Map userPhoneMap=new HashMap();        Map bankcardMap=new HashMap();        Map zhima=new HashMap();        for(int i=0;i<maps.size();i++){            Map one=maps.get(i);            Map two=maps.get(i+1);            userBaseMap.put("userBaseMsgId",one.get("userBaseMsg_id"));            userBaseMap.put("realName",one.get("user_realName"));            userBaseMap.put("userId",one.get("userBaseMsg_userId"));            userBaseMap.put("phone",one.get("user_phone"));            userBaseMap.put("userBaseMsgStatus",one.get("userBaseMsg_status"));            userBaseMap.put("maritalStatus",one.get("userBaseMsg_maritalStatus"));            userBaseMap.put("education",one.get("userBaseMsg_education"));            String address=String.valueOf(one.get("address_province"))+String.valueOf(one.get("address_city"))+String.valueOf(one.get("address_area"));            userBaseMap.put("address",address);            userBaseMap.put("gmtDatetime",one.get("userBaseMsg_gmtDatetime"));            userBaseMap.put("contactNameOne",one.get("user_contact_name"));            userBaseMap.put("contactPhoneOne",one.get("user_contact_phone"));            userBaseMap.put("relationOne",one.get("relation"));            userBaseMap.put("contactNameTwo",two.get("user_contact_name"));            userBaseMap.put("contactPhoneTwo",two.get("user_contact_phone"));            userBaseMap.put("relationTwo",two.get("relation"));            //添加身份信息            userIdentityMap.put("identityFront",one.get("userIdentity_identityFront"));            userIdentityMap.put("identityBack",one.get("userIdentity_identityBack"));            userIdentityMap.put("faceUrl",one.get("userIdentity_faceUrl"));            userIdentityMap.put("identityNum",one.get("userIdentity_identityNum"));            userIdentityMap.put("userName",one.get("userIdentity_userName"));            userIdentityMap.put("gmtDatetime",one.get("userIdentity_gmtDatetime"));            //添加手机认证            userPhoneMap.put("id",one.get("userPhone_id"));            userPhoneMap.put("phone",one.get("userPhone_phone"));            userPhoneMap.put("netAge",one.get("userPhone_netAge"));            userPhoneMap.put("taskId",one.get("userPhone_taskId"));            userPhoneMap.put("gmtDatetime",one.get("userPhone_gmtDatetime"));            //添加银行卡信息            bankcardMap.put("phone",one.get("bankCard_phone"));            bankcardMap.put("name",one.get("bankCard_name"));            bankcardMap.put("bankCardNo",one.get("bankCard_bankCardNo"));            bankcardMap.put("idCardNo",one.get("bankCard_idCardNo"));            bankcardMap.put("bankCardName",one.get("bankCard_bankCardName"));            bankcardMap.put("gmtDatetime",one.get("bankCard_gmtDatetime"));            //添加支付宝信息//            zhifubaoMap.put("realName",one.get("userZhifubao_realName"));//            zhifubaoMap.put("email",one.get("email"));//            zhifubaoMap.put("huabeiQuota",one.get("huabei_Quota"));//            zhifubaoMap.put("huabeiBalance",one.get("huabei_Balance"));//            zhifubaoMap.put("consumeQuota",one.get("consume_Quota"));//            zhifubaoMap.put("gmtDatetime",one.get("userZhifubao_gmtDatetime"));            //添加芝麻信息            zhima.put("realName",one.get("userTaobao_name"));            zhima.put("zxScore",one.get("userTaobao_gender"));            zhima.put("jiebeiAmount",one.get("userTaobao_mobile"));            zhima.put("huabeiTotalAmount",one.get("userTaobao_nickName"));            zhima.put("huabeiAvailAmount",one.get("userTaobao_startus"));            zhima.put("gmtDatetime",one.get("userTaobao_uptDatetime"));            data.put("userBaseMap",userBaseMap);            data.put("userIdentityMap",userIdentityMap);            data.put("userPhoneMap",userPhoneMap);            data.put("bankcardMap",bankcardMap);            data.put("zhifubaoMap",zhima);            break;        }        return JsonResp.ok(data);    }    @RequestMapping(value="/ce", method = RequestMethod.GET)    public R ce(){        return R.ok().put("data",authenticationService.authJoinUserCount(new EntityWrapper<Authentication>().eq("user.source",1)));    }}