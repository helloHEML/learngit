package com.rongke.web;import com.alibaba.fastjson.JSONObject;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.rongke.model.*;import com.rongke.service.*;import com.rongke.utils.TianBeiUtils;import com.rongke.utils.ans.R;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import java.util.*;/** * @AdminController * @后台登录Controller * @version : Ver 1.0 */@RestController@RequestMapping(value="/api/TianBei")@Transactional@CrossOriginpublic class TianbeiController {    private Logger log = Logger.getLogger(this.getClass());    @Autowired    private RadarSmsService radarSmsService;//天贝雷达    @Autowired    private TianbeiSmsService tianbeiSmsService;//天贝短信    @Autowired    private UserService userService;//用户    @Autowired    private AdminService adminService;//管理员验证    @Autowired    private UserIdentityService userIdentityService;//用户身份信息    @Autowired    private TianbeiBaseService tianbeiBaseService;//天贝    @RequestMapping(value = "/Info",method = RequestMethod.GET)    public R thisInfo(Long userId){        adminService.findLoginUser();        RadarSms user_id = radarSmsService.selectOne(new EntityWrapper<RadarSms>().eq("user_id", userId));        if(user_id==null){            User user = userService.selectById(userId);            if(user==null){                return R.error("用户不存在");            }            UserIdentity userIdentity = userIdentityService.selectOne(new EntityWrapper<UserIdentity>().eq("user_id", userId));            if(userIdentity==null||userIdentity.getIdentityNum()==null){                return R.error("用户身份信息不存在");            }            JSONObject json = TianBeiUtils.radarApi(user.getPhone(), userIdentity.getUserName(), userIdentity.getIdentityNum());            if("0".equals(json.getString("code"))&&"1".equals(json.getString("hit"))){//存储                RadarSms radarSms = new RadarSms();                radarSms.setUserId(userId);                radarSms.setCreateTime(new Date());                radarSms.setUpdateTime(new Date());                radarSms.setType(1);                radarSms.setData(json.getString("data"));                radarSmsService.insert(radarSms);                return R.ok().put("data",radarSms);            }else{                return R.error(json.getString("msg"));            }        }else{            return R.ok().put("data",user_id);        }    }    @RequestMapping(value = "/update",method = RequestMethod.GET)    public R update(Long userId){        adminService.findLoginUser();        RadarSms user_id = radarSmsService.selectOne(new EntityWrapper<RadarSms>().eq("user_id", userId));        User user = userService.selectById(userId);        if(user==null){            return R.error("用户不存在");        }        UserIdentity userIdentity = userIdentityService.selectOne(new EntityWrapper<UserIdentity>().eq("user_id", userId));        if(userIdentity==null||userIdentity.getIdentityNum()==null){            return R.error("用户身份信息不存在");        }        JSONObject json = TianBeiUtils.radarApi(user.getPhone(), userIdentity.getUserName(), userIdentity.getIdentityNum());        if("0".equals(json.getString("code"))&&"1".equals(json.getString("hit"))){//存储            if(user_id==null){                user_id = new RadarSms();                user_id.setUserId(userId);                user_id.setCreateTime(new Date());                user_id.setUpdateTime(new Date());                user_id.setType(1);            }            user_id.setData(json.getString("data"));            radarSmsService.insertOrUpdate(user_id);            return R.ok().put("data",user_id);        }else{            return R.error(json.getString("msg"));        }    }    @RequestMapping(value = "/tianbeiSms",method = RequestMethod.GET)    public R tianbeiSms(Long userId){        return tianbeiSmsService.smsInfo(userId);    }    @RequestMapping(value = "/tianbeiSmsUpdate",method = RequestMethod.GET)    public R tianbeiSmsUpdate(Long userId){        return tianbeiSmsService.smsUpdate(userId);    }    /**     *  反欺诈     */    @RequestMapping(value = "/avoidFraud",method = RequestMethod.GET)    public R avoidFraud(Long userId){        return tianbeiBaseService.getAvoidFraud(userId);    }    /**     *  反欺诈更新     */    @RequestMapping(value = "/avoidFraudUP",method = RequestMethod.GET)    public R avoidFraudUP(Long userId){        return tianbeiBaseService.upAvoidFraud(userId);    }}